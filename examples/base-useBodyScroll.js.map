{"version":3,"sources":["webpack:///./examples/base-useBodyScroll.js"],"names":["NUM_ROWS","pageIndex","genData","pIndex","dataBlob","i","ii","MySectionBodyWrapper","props","children","Demo","onEndReached","event","console","log","state","isLoading","hasMore","setState","setTimeout","rData","dataSource","cloneWithRows","ListView","DataSource","rowHasChanged","row1","row2","lv","el","padding","sectionID","rowData","height","__html","navigator","userAgent","match","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"examples/base-useBodyScroll.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint react/prop-types: 0, react/no-multi-comp: 0 */\nimport '../assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ListView from '../src';\n\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n  const dataBlob = {};\n  for (let i = 0; i < NUM_ROWS; i++) {\n    const ii = (pIndex * NUM_ROWS) + i;\n    dataBlob[`${ii}`] = `row - ${ii}`;\n  }\n  return dataBlob;\n}\n\nconst MySectionBodyWrapper = (props) => {\n  return (<table className=\"my-section-body\">\n    <thead><tr><td>table title</td></tr></thead>\n    <tbody>{props.children}</tbody>\n  </table>);\n};\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2,\n    });\n\n    this.state = {\n      dataSource,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    // simulate initial Ajax\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false,\n      });\n    }, 600);\n  }\n\n  onEndReached = (event) => {\n    console.log('fire onEndReached');\n    // load new data\n    // hasMore: from backend data, indicates whether it is the last page, here is false\n    if (this.state.isLoading && !this.state.hasMore) {\n      return;\n    }\n    console.log('reach end', event);\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      this.rData = { ...this.rData, ...genData(++pageIndex) };\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false,\n      });\n    }, 1000);\n  }\n\n  render() {\n    return (<div>\n      <ListView\n        ref={el => this.lv = el}\n        dataSource={this.state.dataSource}\n        useBodyScroll\n        renderHeader={() => <div style={{ padding: 30 }}>设置了`useBodyScroll`</div>}\n        renderFooter={() =>\n          <div style={{ padding: 30 }}>{this.state.isLoading ? 'loading...' : 'loaded'}</div>}\n        renderBodyComponent={() => <div className=\"for-body-demo\" />}\n        renderSectionBodyWrapper={(sectionID) => <MySectionBodyWrapper key={sectionID} />}\n        renderRow={(rowData) => (<tr style={{ height: 50 }}>\n          <td>{rowData} Let me keep typing here so it wraps at least one line.</td>\n        </tr>)}\n        onEndReached={this.onEndReached}\n        onEndReachedThreshold={100}\n        pageSize={10}\n      />\n      <div dangerouslySetInnerHTML={{\n        __html: navigator.userAgent.match(/Android|iPhone|iPad|iPod/i) ?\n          '<style>#qrcode, .highlight{ display: none }</style>' : '',\n      }}\n      />\n    </div>);\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/base-useBodyScroll.js"],"sourceRoot":""}