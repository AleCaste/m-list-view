{"version":3,"sources":["webpack:///./~/zscroller/es/Animate.js","webpack:///./~/zscroller/es/DOMScroller.js","webpack:///./~/zscroller/es/Scroller.js","webpack:///./examples/zscroller-pulldown.js","webpack:///./~/babel-runtime/core-js/array/from.js","webpack:///./~/babel-runtime/helpers/toConsumableArray.js","webpack:///./~/babel-runtime/~/core-js/library/fn/array/from.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_classof.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_create-property.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_is-array-iter.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_iter-call.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_iter-detect.js","webpack:///./~/babel-runtime/~/core-js/library/modules/core.get-iterator-method.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.array.from.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/Zscroller.js","webpack:///./~/performance-now/lib/performance-now.js","webpack:///./~/raf/index.js"],"names":["data","img","title","des","index","length","NUM_ROWS","pageIndex","genData","pIndex","dataArr","i","push","Demo","props","onScroll","e","scrollerTop","scroller","getValues","top","domScroller","onRefresh","console","log","manuallyRefresh","setState","refreshing","isLoading","setTimeout","rData","dataSource","state","cloneWithRows","showFinishTxt","options","animationDuration","onEndReached","event","hasMore","scrollingComplete","ListView","DataSource","rowHasChanged","row1","row2","height","document","documentElement","clientHeight","body","style","overflowY","navigator","userAgent","match","lv","getInnerViewNode","addEventListener","ts","tsPageY","touches","pageY","scrollNode","scrollingElement","tm","tmPageY","scrollTop","preventDefaultOnTouchMove","undefined","removeEventListener","el","border","margin","padding","textAlign","rowData","sectionID","rowID","obj","display","marginRight","color","marginTop","backgroundColor","scrollbars","renderCustomIcon","React","Component","ReactDOM","render","getElementById","ScrollView","prevProps","refreshControl","preRefreshing","nowRefreshing","_refreshControlTimer","finishPullToRefresh","triggerPullToRefresh","handleScroll","getMetrics","scrollEventThrottle","throttle","renderZscroller","destroy","scrollerOptions","distanceToRefresh","restProps","scrollingX","deactive","activatePullToRefresh","overDistanceThenRelease","active","loadingState","children","className","prefixCls","listPrefixCls","listViewPrefixCls","contentContainerStyle","icon","loading","preCls","containerProps","ref","ScrollViewRef","position","overflow","flex","classNames","contentContainerProps","InnerScrollViewRef","minWidth","wrapCls","RefreshControlRef","propTypes","PropTypes","any","string","object","func","bool","number","defaultProps","isVertical","horizontal","visibleLength","container","contentLength","content","offset","scrollTo","reflow"],"mappings":";;;;;;8CAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,0BAA0B,SAAS;AACnC,2EAA2E,8BAA8B,EAAE;AAC3G,4BAA4B,SAAS;AACrC,sDAAsD,8BAA8B,EAAE;AACtF,+BAA+B;AAC/B,uFAAuF;AACvF,sBAAsB,QAAQ;AAC9B,0BAA0B,SAAS;AACnC,6DAA6D,sBAAsB,EAAE;AACrF,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kE;;;;;;;;;;;;ACrJA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yFAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,sE;;;;;;;;AC/RA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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EA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,qBAAqB,gBAAgB;AACrC,wBAAwB,WAAW;AACnC,uBAAuB,WAAW;AAClC,sBAAsB,gBAAgB;AACtC;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B,iBAAiB,YAAY;AAC7B,qBAAqB,cAAc;AACnC,kBAAkB,YAAY;AAC9B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B,iBAAiB,WAAW;AAC5B,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,WAAW;;AAEX;AACA,WAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA,WAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,oDAAoD;AAChF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,iBAAiB,OAAO;AACxB,qBAAqB,cAAc;AACnC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/wCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,OAAO,CACX;AACEC,OAAK,6DADP;AAEEC,SAAO,YAFT;AAGEC,OAAK;AAHP,CADW,EAMX;AACEF,OAAK,6DADP;AAEEC,SAAO,yBAFT;AAGEC,OAAK;AAHP,CANW,EAWX;AACEF,OAAK,6DADP;AAEEC,SAAO,cAFT;AAGEC,OAAK;AAHP,CAXW,CAAb;AAiBA,IAAIC,QAAQJ,KAAKK,MAAL,GAAc,CAA1B;;AAEA,IAAMC,WAAW,EAAjB;AACA,IAAIC,YAAY,CAAhB;;AAEA,SAASC,OAAT,GAA6B;AAAA,MAAZC,MAAY,uEAAH,CAAG;;AAC3B,MAAMC,UAAU,EAAhB;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIL,QAApB,EAA8BK,GAA9B,EAAmC;AACjCD,YAAQE,IAAR,aAAuBH,SAASH,QAAV,GAAsBK,CAA5C;AACD;AACD,SAAOD,OAAP;AACD;;IAEKG,I;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,yKACXA,KADW;;AAAA,UAgDnBC,QAhDmB,GAgDR,UAACC,CAAD,EAAO;AAChB;AACA,YAAKC,WAAL,GAAmBD,EAAEE,QAAF,CAAWC,SAAX,GAAuBC,GAA1C;AACA,YAAKC,WAAL,GAAmBL,CAAnB;AACD,KApDkB;;AAAA,UAsDnBM,SAtDmB,GAsDP,YAAM;AAChBC,cAAQC,GAAR,CAAY,WAAZ;AACA,UAAI,CAAC,MAAKC,eAAV,EAA2B;AACzB,cAAKC,QAAL,CAAc,EAAEC,YAAY,IAAd,EAAoBC,WAAW,IAA/B,EAAd;AACD,OAFD,MAEO;AACL,cAAKH,eAAL,GAAuB,KAAvB;AACD;;AAED;AACAI,iBAAW,YAAM;AACf,cAAKC,KAAL,GAAatB,SAAb;AACA,cAAKkB,QAAL,CAAc;AACZK,sBAAY,MAAKC,KAAL,CAAWD,UAAX,CAAsBE,aAAtB,CAAoC,MAAKH,KAAzC,CADA;AAEZH,sBAAY,KAFA;AAGZC,qBAAW,KAHC;AAIZM,yBAAe;AAJH,SAAd;AAMA,YAAI,MAAKb,WAAT,EAAsB;AACpB,gBAAKA,WAAL,CAAiBH,QAAjB,CAA0BiB,OAA1B,CAAkCC,iBAAlC,GAAsD,GAAtD;AACD;AACF,OAXD,EAWG,GAXH;AAYD,KA3EkB;;AAAA,UA6EnBC,YA7EmB,GA6EJ,UAACC,KAAD,EAAW;AACxBf,cAAQC,GAAR,CAAY,mBAAZ;AACA;AACA;AACA,UAAI,MAAKQ,KAAL,CAAWJ,SAAX,IAAwB,CAAC,MAAKI,KAAL,CAAWO,OAAxC,EAAiD;AAC/C;AACD;AACDhB,cAAQC,GAAR,CAAY,WAAZ,EAAyBc,KAAzB;AACA,YAAKZ,QAAL,CAAc,EAAEE,WAAW,IAAb,EAAd;AACAC,iBAAW,YAAM;AACf,cAAKC,KAAL,6FAAiB,MAAKA,KAAtB,mFAAgCtB,QAAQ,EAAED,SAAV,CAAhC;AACA,cAAKmB,QAAL,CAAc;AACZK,sBAAY,MAAKC,KAAL,CAAWD,UAAX,CAAsBE,aAAtB,CAAoC,MAAKH,KAAzC,CADA;AAEZF,qBAAW;AAFC,SAAd;AAID,OAND,EAMG,IANH;AAOD,KA7FkB;;AAAA,UA+FnBY,iBA/FmB,GA+FC,YAAM;AACxB;AACA,UAAI,MAAKvB,WAAL,IAAoB,CAAC,CAAzB,EAA4B;AAC1B,cAAKS,QAAL,CAAc,EAAEQ,eAAe,KAAjB,EAAd;AACD;AACF,KApGkB;;AAEjB,QAAMH,aAAa,IAAI,qDAAAU,CAASC,UAAb,CAAwB;AACzCC,qBAAe,uBAACC,IAAD,EAAOC,IAAP;AAAA,eAAgBD,SAASC,IAAzB;AAAA;AAD0B,KAAxB,CAAnB;;AAIA,UAAKb,KAAL,GAAa;AACXD,4BADW;AAEXJ,kBAAY,IAFD;AAGXmB,cAAQC,SAASC,eAAT,CAAyBC;AAHtB,KAAb;AANiB;AAWlB;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;wCAEoB;AAAA;;AAClBF,eAASG,IAAT,CAAcC,KAAd,CAAoBC,SAApB,GACEC,UAAUC,SAAV,CAAoBC,KAApB,CAA0B,2BAA1B,IAAyD,QAAzD,GAAoE,MADtE;;AAGA;AACA,WAAKC,EAAL,CAAQC,gBAAR,GAA2BC,gBAA3B,CAA4C,YAA5C,EAA0D,KAAKC,EAAL,GAAU,UAAC3C,CAAD,EAAO;AACzE,eAAK4C,OAAL,GAAe5C,EAAE6C,OAAF,CAAU,CAAV,EAAaC,KAA5B;AACD,OAFD;AAGA;AACA,UAAMC,aAAahB,SAASiB,gBAAT,GAA4BjB,SAASiB,gBAArC,GAAwDjB,SAASG,IAApF;AACA,WAAKM,EAAL,CAAQC,gBAAR,GAA2BC,gBAA3B,CAA4C,WAA5C,EAAyD,KAAKO,EAAL,GAAU,UAACjD,CAAD,EAAO;AACxE,eAAKkD,OAAL,GAAelD,EAAE6C,OAAF,CAAU,CAAV,EAAaC,KAA5B;AACA,YAAI,OAAKI,OAAL,GAAe,OAAKN,OAApB,IAA+B,OAAK3C,WAAL,IAAoB,CAAnD,IAAwD8C,WAAWI,SAAX,GAAuB,CAAnF,EAAsF;AACpF5C,kBAAQC,GAAR,CAAY,uBAAZ;AACA,iBAAKH,WAAL,CAAiBc,OAAjB,CAAyBiC,yBAAzB,GAAqD,KAArD;AACD,SAHD,MAGO;AACL,iBAAK/C,WAAL,CAAiBc,OAAjB,CAAyBiC,yBAAzB,GAAqDC,SAArD;AACD;AACF,OARD;AASD;;;2CAEsB;AACrB,WAAKb,EAAL,CAAQC,gBAAR,GAA2Ba,mBAA3B,CAA+C,YAA/C,EAA6D,KAAKX,EAAlE;AACA,WAAKH,EAAL,CAAQC,gBAAR,GAA2Ba,mBAA3B,CAA+C,WAA/C,EAA4D,KAAKL,EAAjE;AACD;;;uCAwDkB;AACjB,aAAO,CACL;AAAA;AAAA,UAAK,KAAI,GAAT,EAAa,WAAU,gCAAvB;AACE;AAAA;AAAA;AAAO,eAAKjC,KAAL,CAAWE,aAAX,GAA2B,MAA3B,GAAoC;AAA3C;AADF,OADK,EAIL;AAAA;AAAA,UAAK,KAAI,GAAT,EAAa,WAAU,mCAAvB;AACE;AAAA;AAAA;AAAA;AAAA;AADF,OAJK,CAAP;AAQD;;;6BAEQ;AAAA;;AACP,aACE,4DAAC,qDAAD;AACE,aAAK;AAAA,iBAAM,OAAKsB,EAAL,GAAUe,EAAhB;AAAA,SADP;AAEE,oBAAY,KAAKvC,KAAL,CAAWD,UAFzB;AAGE,eAAO,EAAEe,QAAQ,GAAV,EAAe0B,QAAQ,gBAAvB,EAAyCC,QAAQ,QAAjD,EAHT;AAIE,+BAAuB;AAAA,iBAAS,4DAAC,+DAAD,EAAe3D,KAAf,CAAT;AAAA,SAJzB;AAKE,sBAAc;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,WAAN;AAAA,SALhB;AAME,sBAAc;AAAA,iBAAO;AAAA;AAAA,cAAK,OAAO,EAAE4D,SAAS,EAAX,EAAeC,WAAW,QAA1B,EAAZ;AAClB,mBAAK3C,KAAL,CAAWJ,SAAX,GAAuB,YAAvB,GAAsC;AADpB,WAAP;AAAA,SANhB;AASE,mBAAW,mBAACgD,OAAD,EAAUC,SAAV,EAAqBC,KAArB,EAA+B;AACxC,cAAI1E,QAAQ,CAAZ,EAAe;AACbA,oBAAQJ,KAAKK,MAAL,GAAc,CAAtB;AACD;AACD,cAAM0E,MAAM/E,KAAKI,OAAL,CAAZ;AACA,iBACE;AAAA;AAAA,cAAK,KAAK0E,KAAV,EAAiB,OAAO,EAAEJ,SAAS,UAAX,EAAxB;AACE;AAAA;AAAA;AAAKK,kBAAI7E;AAAT,aADF;AAEE;AAAA;AAAA,gBAAK,OAAO,EAAE8E,SAAS,MAAX,EAAZ;AACE,mFAAK,OAAO,EAAElC,QAAQ,EAAV,EAAcmC,aAAa,CAA3B,EAAZ,EAA4C,KAAKF,IAAI9E,GAArD,GADF;AAEE;AAAA;AAAA,kBAAK,OAAO,EAAE+E,SAAS,cAAX,EAAZ;AACE;AAAA;AAAA;AAAMJ,yBAAN;AAAA;AAAgBG,sBAAI5E;AAApB,iBADF;AAEE;AAAA;AAAA,oBAAK,OAAO,EAAE+E,OAAO,SAAT,EAAoBC,WAAW,EAA/B,EAAZ;AAAkDL;AAAlD;AAFF;AAFF;AAFF,WADF;AAYD,SA1BH;AA2BE,yBAAiB,yBAACD,SAAD,EAAYC,KAAZ;AAAA,iBACf,qEAAK,KAAQD,SAAR,SAAqBC,KAA1B,EAAmC,OAAO,EAAEM,iBAAiB,SAAnB,EAA8BtC,QAAQ,CAAtC,EAA1C,GADe;AAAA,SA3BnB;AA8BE,yBAAiB,EAAEuC,YAAY,IAAd,EAAoB7C,mBAAmB,KAAKA,iBAA5C,EA9BnB;AA+BE,4BA/BF;AAgCE,oBAAY,KAAKR,KAAL,CAAWL,UAhCzB;AAiCE,mBAAW,KAAKL,SAjClB;AAkCE,cAAM,KAAKgE,gBAAL,EAlCR;AAmCE,kBAAU,KAAKvE,QAnCjB;AAoCE,sBAAc,KAAKsB,YApCrB;AAqCE,+BAAuB,EArCzB;AAsCE,kBAAU;AAtCZ,QADF;AA0CD;;;;EA7JgB,6CAAAkD,CAAMC,S;;AAgKzB,iDAAAC,CAASC,MAAT,CAAgB,4DAAC,IAAD,OAAhB,EAA0B3C,SAAS4C,cAAT,CAAwB,iBAAxB,CAA1B,E;;;;;;;;;;;;;;;ACtMA,kBAAkB,wD;;;;;;;;ACAlB;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,E;;;;;;;ACpBA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB,EAAE;;AAE/C;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;;AAEA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,iCAAiC,SAAS,EAAE;AAC5C,CAAC,YAAY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS,qBAAqB;AAC3D,iCAAiC,aAAa;AAC9C;AACA,GAAG,YAAY;AACf;AACA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0EAA4E,kBAAkB,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gCAAgC;AACvF;AACA;AACA,KAAK;AACL;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACpCD;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;;IAEqBC,U;;;;;;;;;;;;;;;;;;;uCAuCAC,S,EAAW;AAC5B,UAAIA,UAAUC,cAAV,IAA4B,KAAKhF,KAAL,CAAWgF,cAA3C,EAA2D;AACzD,YAAMC,gBAAgBF,UAAUlE,UAAhC;AACA,YAAMqE,gBAAgB,KAAKlF,KAAL,CAAWa,UAAjC;AACA,YAAIoE,iBAAiB,CAACC,aAAlB,IAAmC,CAAC,KAAKC,oBAA7C,EAAmE;AACjE,eAAK5E,WAAL,CAAiBH,QAAjB,CAA0BgF,mBAA1B;AACD,SAFD,MAEO,IAAI,CAAC,KAAKzE,eAAN,IAAyB,CAACsE,aAA1B,IAA2CC,aAA/C,EAA8D;AACnE,eAAK3E,WAAL,CAAiBH,QAAjB,CAA0BiF,oBAA1B;AACD;AACF;AACF;;;wCACmB;AAAA;;AAClB,UAAIC,eAAe;AAAA,eACjB,OAAKtF,KAAL,CAAWC,QAAX,IAAuB,OAAKD,KAAL,CAAWC,QAAX,CAAoB,OAAKM,WAAzB,EAAsC,OAAKgF,UAAL,EAAtC,CADN;AAAA,OAAnB;AAEA,UAAI,KAAKvF,KAAL,CAAWwF,mBAAf,EAAoC;AAClCF,uBAAe,+EAAAG,CAASH,YAAT,EAAuB,KAAKtF,KAAL,CAAWwF,mBAAlC,CAAf;AACD;AACD,WAAKF,YAAL,GAAoBA,YAApB;AACA,WAAKI,eAAL;AACD;;;2CACsB;AACrB,WAAKnF,WAAL,CAAiBoF,OAAjB;AACD;;;sCAmBiB;AAAA;;AAAA,mBAC0D,KAAK3F,KAD/D;AAAA,UACR4F,eADQ,UACRA,eADQ;AAAA,UACSZ,cADT,UACSA,cADT;AAAA,UACyBa,iBADzB,UACyBA,iBADzB;AAAA,UAC4CrF,SAD5C,UAC4CA,SAD5C;;AAAA,UAERkB,kBAFQ,GAE4BkE,eAF5B,CAERlE,iBAFQ;AAAA,UAEcoE,SAFd,yFAE4BF,eAF5B;;AAGhB,WAAKrF,WAAL,GAAmB,IAAI,0DAAJ,CAAgB,KAAKoC,gBAAL,EAAhB;AACjBoD,oBAAY,KADK;AAEjB9F,kBAAU,KAAKqF,YAFE;AAGjB5D,2BAAmB,6BAAM;AACvB,cAAIsD,kBAAkB,OAAK9D,KAAL,CAAW8E,QAAjC,EAA2C;AACzC,mBAAKpF,QAAL,CAAc,EAAEoF,UAAU,KAAZ,EAAd;AACD;AACD,cAAItE,kBAAJ,EAAuB;AACrBA;AACD;AACF;AAVgB,SAWdoE,SAXc,EAAnB;AAaA,UAAId,cAAJ,EAAoB;AAClB,YAAM5E,WAAW,KAAKG,WAAL,CAAiBH,QAAlC;AACAA,iBAAS6F,qBAAT,CAA+BJ,iBAA/B,EACE,YAAM;AACJ;AACA,iBAAKlF,eAAL,GAAuB,IAAvB;AACA,iBAAKuF,uBAAL,GAA+B,KAA/B;AACA,iBAAKtF,QAAL,CAAc,EAAEuF,QAAQ,IAAV,EAAd;AACD,SANH,EAOE,YAAM;AACJ;AACA,iBAAKxF,eAAL,GAAuB,KAAvB;AACA,iBAAKC,QAAL,CAAc;AACZoF,sBAAU,OAAKE,uBADH;AAEZC,oBAAQ,KAFI;AAGZC,0BAAc;AAHF,WAAd;AAKD,SAfH,EAgBE,YAAM;AACJ;AACA,iBAAKF,uBAAL,GAA+B,IAA/B;AACA,iBAAKtF,QAAL,CAAc;AACZoF,sBAAU,KADE;AAEZI,0BAAc;AAFF,WAAd;AAIA,iBAAKjB,oBAAL,GAA4BpE,WAAW,YAAM;AAC3C,gBAAI,CAAC,OAAKf,KAAL,CAAWa,UAAhB,EAA4B;AAC1BT,uBAASgF,mBAAT;AACD;AACD,mBAAKD,oBAAL,GAA4B5B,SAA5B;AACD,WAL2B,EAKzB,IALyB,CAA5B;AAMA/C;AACD,SA9BH;AA+BA,YAAI,KAAKR,KAAL,CAAWa,UAAf,EAA2B;AACzBT,mBAASiF,oBAAT;AACD;AACF;AACF;;;6BACQ;AAAA;AAAA;;AAAA,oBAKH,KAAKrF,KALF;AAAA,UAELqG,QAFK,WAELA,QAFK;AAAA,UAEKC,SAFL,WAEKA,SAFL;AAAA,UAEgBC,SAFhB,WAEgBA,SAFhB;AAAA,UAE2BC,aAF3B,WAE2BA,aAF3B;AAAA,UAE0CC,iBAF1C,WAE0CA,iBAF1C;AAAA,kCAGLpE,KAHK;AAAA,UAGLA,KAHK,iCAGG,EAHH;AAAA,0CAGOqE,qBAHP;AAAA,UAGOA,qBAHP,yCAG+B,EAH/B;AAAA,UAGmC1B,cAHnC,WAGmCA,cAHnC;AAAA,UAIL2B,IAJK,WAILA,IAJK;AAAA,UAICC,OAJD,WAICA,OAJD;AAAA,UAIU/F,UAJV,WAIUA,UAJV;;;AAOP,UAAMgG,SAASN,aAAaE,iBAAb,IAAkC,EAAjD;;AAEA,UAAMK,iBAAiB;AACrBC,aAAK;AAAA,iBAAM,OAAKC,aAAL,GAAqBvD,EAA3B;AAAA,SADgB;AAErBpB,eAAA,qEAAAA,GAAS4E,UAAU,UAAnB,EAA+BC,UAAU,QAAzC,EAAmDC,MAAM,CAAzD,IAA+D9E,KAA/D,CAFqB;AAGrBiE,mBAAW,mDAAAc,CAAWd,SAAX,EAAyBO,MAAzB;AAHU,OAAvB;AAKA,UAAMQ,wBAAwB;AAC5BN,aAAK;AAAA,iBAAM,OAAKO,kBAAL,GAA0B7D,EAAhC;AAAA,SADuB;AAE5BpB,eAAA,qEAAAA,GAAS4E,UAAU,UAAnB,EAA+BM,UAAU,MAAzC,IAAoDb,qBAApD,CAF4B;AAG5BJ,mBAAW,mDAAAc,CAAcP,MAAd,0BAA2CL,aAA3C;AAHiB,OAA9B;;AAdO,mBAoBoC,KAAKtF,KApBzC;AAAA,UAoBCiF,MApBD,UAoBCA,MApBD;AAAA,UAoBSH,QApBT,UAoBSA,QApBT;AAAA,UAoBmBI,YApBnB,UAoBmBA,YApBnB;;AAqBP,UAAMoB,UAAU,mDAAAJ,CAAcP,MAAd,8IACVA,MADU,8BACwBV,MADxB,6FAEVU,MAFU,gCAE0Bb,QAF1B,6FAGVa,MAHU,+BAGyBT,gBAAgBvF,UAHzC,gBAAhB;;AAMA,UAAImE,cAAJ,EAAoB;AAClB,eACE;AAAA;AAAS8B,wBAAT;AACE;AAAA;AAASO,iCAAT;AACE;AAAA;AAAA,gBAAK,KAAK;AAAA,yBAAM,OAAKI,iBAAL,GAAyBhE,EAA/B;AAAA,iBAAV,EAA6C,WAAW+D,OAAxD;AACE;AAAA;AAAA,kBAAK,WAAcX,MAAd,4CAAL;AAAqEF;AAArE,eADF;AAEE;AAAA;AAAA,kBAAK,WAAcE,MAAd,+CAAL;AAAwED;AAAxE;AAFF,aADF;AAKGP;AALH;AADF,SADF;AAWD;;AAED,aACE;AAAA;AAASS,sBAAT;AACE;AAAA;AAASO,+BAAT;AACGhB;AADH;AADF,OADF;AAOD;;;;EAtLqC,6CAAA5B,CAAMC,S;;AAAzBI,U,CACZ4C,S,GAAY;AACjBrB,YAAU,kDAAAsB,CAAUC,GADH;AAEjBtB,aAAW,kDAAAqB,CAAUE,MAFJ;AAGjBtB,aAAW,kDAAAoB,CAAUE,MAHJ;AAIjBrB,iBAAe,kDAAAmB,CAAUE,MAJR;AAKjBpB,qBAAmB,kDAAAkB,CAAUE,MALZ;AAMjBxF,SAAO,kDAAAsF,CAAUG,MANA;AAOjBpB,yBAAuB,kDAAAiB,CAAUG,MAPhB;AAQjB7H,YAAU,kDAAA0H,CAAUI,IARH;AASjB/C,kBAAgB,kDAAA2C,CAAUK,IATT;AAUjBrB,QAAM,kDAAAgB,CAAUC,GAVC;AAWjBhB,WAAS,kDAAAe,CAAUC,GAXF;AAYjB/B,qBAAmB,kDAAA8B,CAAUM,MAZZ;AAajBpH,cAAY,kDAAA8G,CAAUK,IAbL;AAcjBxH,aAAW,kDAAAmH,CAAUI;AAdJ,C;AADAjD,U,CAkBZoD,Y,GAAe;AACpB3B,aAAW,WADS;AAEpBV,qBAAmB,EAFC;AAGpBhF,cAAY,KAHQ;AAIpB8F,QAAM,CACJ;AAAA;AAAA,MAAK,KAAI,GAAT,EAAa,WAAU,gCAAvB;AAAA;AAAA,GADI,EAIJ;AAAA;AAAA,MAAK,KAAI,GAAT,EAAa,WAAU,mCAAvB;AAAA;AAAA,GAJI,CAJc;AAYpBC,WAAS;AAAA;AAAA;AAAA;AAAA;AAZW,C;;;;;OAetB1F,K,GAAQ;AACNiF,YAAQ,KADF;AAENH,cAAU,KAFJ;AAGNI,kBAAc;AAHR,G;;OA8BRb,U,GAAa,YAAM;AACjB,QAAM4C,aAAa,CAAC,OAAKnI,KAAL,CAAWoI,UAA/B;AACA,WAAO;AACLC,qBAAe,OAAK9H,WAAL,CAAiB+H,SAAjB,CAA2BH,aAAa,cAAb,GAA8B,aAAzD,CADV;AAELI,qBAAe,OAAKhI,WAAL,CAAiBiI,OAAjB,CAAyBL,aAAa,cAAb,GAA8B,aAAvD,CAFV;AAGLM,cAAQ,OAAKlI,WAAL,CAAiBH,QAAjB,CAA0BC,SAA1B,GAAsC8H,aAAa,KAAb,GAAqB,MAA3D;AAHH,KAAP;AAKD,G;;OAEDxF,gB,GAAmB;AAAA,WAAM,OAAK2E,kBAAX;AAAA,G;;OAEnBoB,Q,GAAW,YAAa;AAAA;;AACtB;AACA,WAAKnI,WAAL,CAAiBoI,MAAjB;AACA,oCAAKpI,WAAL,CAAiBH,QAAjB,EAA0BsI,QAA1B;AACD,G;;;yDA9EkB5D,U;;;;;;;ACRrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA,aAAa;AACb,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"examples/zscroller-pulldown.js","sourcesContent":["/*\n * Scroller\n * http://github.com/zynga/scroller\n *\n * Copyright 2011, Zynga Inc.\n * Licensed under the MIT License.\n * https://raw.github.com/zynga/scroller/master/MIT-LICENSE.txt\n *\n * Based on the work of: Unify Project (unify-project.org)\n * http://unify-project.org\n * Copyright 2011, Deutsche Telekom AG\n * License: MIT + Apache (V2)\n */\n\n/**\n * Generic animation class with support for dropped frames both optional easing and duration.\n *\n * Optional duration is useful when the lifetime is defined by another condition than time\n * e.g. speed of an animating object, etc.\n *\n * Dropped frame logic allows to keep using the same updater logic independent from the actual\n * rendering. This eases a lot of cases where it might be pretty complex to break down a state\n * based on the pure time difference.\n */\nimport raf from 'raf';\n\nvar desiredFrames = 60;\nvar millisecondsPerSecond = 1000;\nvar running = {};\nvar counter = 1;\nvar win = typeof window !== 'undefined' ? window : undefined;\n\nif (!win) {\n  win = typeof global !== 'undefined' ? global : {};\n}\n\nvar Animate = {\n  /**\n   * Stops the given animation.\n   *\n   * @param id {Integer} Unique animation ID\n   * @return {Boolean} Whether the animation was stopped (aka, was running before)\n   */\n  stop: function stop(id) {\n    var cleared = running[id] != null;\n    if (cleared) {\n      running[id] = null;\n    }\n\n    return cleared;\n  },\n\n  /**\n   * Whether the given animation is still running.\n   *\n   * @param id {Integer} Unique animation ID\n   * @return {Boolean} Whether the animation is still running\n   */\n  isRunning: function isRunning(id) {\n    return running[id] != null;\n  },\n\n  /**\n   * Start the animation.\n   *\n   * @param stepCallback {Function} Pointer to function which is executed on every step.\n   *   Signature of the method should be `function(percent, now, virtual) { return continueWithAnimation; }`\n   * @param verifyCallback {Function} Executed before every animation step.\n   *   Signature of the method should be `function() { return continueWithAnimation; }`\n   * @param completedCallback {Function}\n   *   Signature of the method should be `function(droppedFrames, finishedAnimation) {}`\n   * @param duration {Integer} Milliseconds to run the animation\n   * @param easingMethod {Function} Pointer to easing function\n   *   Signature of the method should be `function(percent) { return modifiedValue; }`\n   * @return {Integer} Identifier of animation. Can be used to stop it any time.\n   */\n  start: function start(stepCallback, verifyCallback, completedCallback, duration, easingMethod) {\n    var start = +new Date();\n    var lastFrame = start;\n    var percent = 0;\n    var dropCounter = 0;\n    var id = counter++;\n\n    // Compacting running db automatically every few new animations\n    if (id % 20 === 0) {\n      var newRunning = {};\n      for (var usedId in running) {\n        newRunning[usedId] = true;\n      }\n      running = newRunning;\n    }\n\n    // This is the internal step method which is called every few milliseconds\n    var step = function step(virtual) {\n      // Normalize virtual value\n      var render = virtual !== true;\n\n      // Get current time\n      var now = +new Date();\n\n      // Verification is executed before next animation step\n      if (!running[id] || verifyCallback && !verifyCallback(id)) {\n\n        running[id] = null;\n        completedCallback && completedCallback(desiredFrames - dropCounter / ((now - start) / millisecondsPerSecond), id, false);\n        return;\n      }\n\n      // For the current rendering to apply let's update omitted steps in memory.\n      // This is important to bring internal state variables up-to-date with progress in time.\n      if (render) {\n\n        var droppedFrames = Math.round((now - lastFrame) / (millisecondsPerSecond / desiredFrames)) - 1;\n        for (var j = 0; j < Math.min(droppedFrames, 4); j++) {\n          step(true);\n          dropCounter++;\n        }\n      }\n\n      // Compute percent value\n      if (duration) {\n        percent = (now - start) / duration;\n        if (percent > 1) {\n          percent = 1;\n        }\n      }\n\n      // Execute step callback, then...\n      var value = easingMethod ? easingMethod(percent) : percent;\n      if ((stepCallback(value, now, render) === false || percent === 1) && render) {\n        running[id] = null;\n        completedCallback && completedCallback(desiredFrames - dropCounter / ((now - start) / millisecondsPerSecond), id, percent === 1 || duration == null);\n      } else if (render) {\n        lastFrame = now;\n        raf(step);\n      }\n    };\n\n    // Mark as running\n    running[id] = true;\n\n    // Init first step\n    raf(step);\n\n    // Return unique animation ID\n    return id;\n  }\n};\n\nexport default Animate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zscroller/es/Animate.js\n// module id = 116\n// module chunks = 0 3","import _extends from 'babel-runtime/helpers/extends';\nimport Scroller from './Scroller';\n\nvar MIN_INDICATOR_SIZE = 8;\n\nfunction setTransform(nodeStyle, value) {\n  nodeStyle.transform = value;\n  nodeStyle.webkitTransform = value;\n  nodeStyle.MozTransform = value;\n}\n\nfunction setTransformOrigin(nodeStyle, value) {\n  nodeStyle.transformOrigin = value;\n  nodeStyle.webkitTransformOrigin = value;\n  nodeStyle.MozTransformOrigin = value;\n}\n\nfunction DOMScroller(content) {\n  var _this = this;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var scrollbars = void 0;\n  var indicators = void 0;\n  var indicatorsSize = void 0;\n  var scrollbarsSize = void 0;\n  var indicatorsPos = void 0;\n  var scrollbarsOpacity = void 0;\n  var contentSize = void 0;\n  var clientSize = void 0;\n\n  this.content = content;\n  this.container = content.parentNode;\n  this.options = _extends({}, options, {\n    scrollingComplete: function scrollingComplete() {\n      _this.clearScrollbarTimer();\n      _this.timer = setTimeout(function () {\n        if (_this._destroyed) {\n          return;\n        }\n        if (options.scrollingComplete) {\n          options.scrollingComplete();\n        }\n        if (scrollbars) {\n          ['x', 'y'].forEach(function (k) {\n            if (scrollbars[k]) {\n              _this.setScrollbarOpacity(k, 0);\n            }\n          });\n        }\n      }, 0);\n    }\n  });\n\n  if (this.options.scrollbars) {\n    scrollbars = this.scrollbars = {};\n    indicators = this.indicators = {};\n    indicatorsSize = this.indicatorsSize = {};\n    scrollbarsSize = this.scrollbarsSize = {};\n    indicatorsPos = this.indicatorsPos = {};\n    scrollbarsOpacity = this.scrollbarsOpacity = {};\n    contentSize = this.contentSize = {};\n    clientSize = this.clientSize = {};\n\n    ['x', 'y'].forEach(function (k) {\n      var optionName = k === 'x' ? 'scrollingX' : 'scrollingY';\n      if (_this.options[optionName] !== false) {\n        scrollbars[k] = document.createElement('div');\n        scrollbars[k].className = 'zscroller-scrollbar-' + k;\n        indicators[k] = document.createElement('div');\n        indicators[k].className = 'zscroller-indicator-' + k;\n        scrollbars[k].appendChild(indicators[k]);\n        indicatorsSize[k] = -1;\n        scrollbarsOpacity[k] = 0;\n        indicatorsPos[k] = 0;\n        _this.container.appendChild(scrollbars[k]);\n      }\n    });\n  }\n\n  var init = true;\n  var contentStyle = content.style;\n\n  // create Scroller instance\n  this.scroller = new Scroller(function (left, top, zoom) {\n    if (!init && options.onScroll) {\n      options.onScroll();\n    }\n    setTransform(contentStyle, 'translate3d(' + -left + 'px,' + -top + 'px,0) scale(' + zoom + ')');\n    if (scrollbars) {\n      ['x', 'y'].forEach(function (k) {\n        if (scrollbars[k]) {\n          var pos = k === 'x' ? left : top;\n          if (clientSize[k] >= contentSize[k]) {\n            _this.setScrollbarOpacity(k, 0);\n          } else {\n            if (!init) {\n              _this.setScrollbarOpacity(k, 1);\n            }\n            var normalIndicatorSize = clientSize[k] / contentSize[k] * scrollbarsSize[k];\n            var size = normalIndicatorSize;\n            var indicatorPos = void 0;\n            if (pos < 0) {\n              size = Math.max(normalIndicatorSize + pos, MIN_INDICATOR_SIZE);\n              indicatorPos = 0;\n            } else if (pos > contentSize[k] - clientSize[k]) {\n              size = Math.max(normalIndicatorSize + contentSize[k] - clientSize[k] - pos, MIN_INDICATOR_SIZE);\n              indicatorPos = scrollbarsSize[k] - size;\n            } else {\n              indicatorPos = pos / contentSize[k] * scrollbarsSize[k];\n            }\n            _this.setIndicatorSize(k, size);\n            _this.setIndicatorPos(k, indicatorPos);\n          }\n        }\n      });\n    }\n    init = false;\n  }, this.options);\n\n  // bind events\n  this.bindEvents();\n\n  // the content element needs a correct transform origin for zooming\n  setTransformOrigin(content.style, 'left top');\n\n  // reflow for the first time\n  this.reflow();\n}\n\nDOMScroller.prototype.setDisabled = function setDisabled(disabled) {\n  this.disabled = disabled;\n};\n\nDOMScroller.prototype.clearScrollbarTimer = function clearScrollbarTimer() {\n  if (this.timer) {\n    clearTimeout(this.timer);\n    this.timer = null;\n  }\n};\n\nDOMScroller.prototype.setScrollbarOpacity = function setScrollbarOpacity(axis, opacity) {\n  if (this.scrollbarsOpacity[axis] !== opacity) {\n    this.scrollbars[axis].style.opacity = opacity;\n    this.scrollbarsOpacity[axis] = opacity;\n  }\n};\n\nDOMScroller.prototype.setIndicatorPos = function setIndicatorPos(axis, value) {\n  if (this.indicatorsPos[axis] !== value) {\n    if (axis === 'x') {\n      setTransform(this.indicators[axis].style, 'translate3d(' + value + 'px,0,0)');\n    } else {\n      setTransform(this.indicators[axis].style, 'translate3d(0, ' + value + 'px,0)');\n    }\n    this.indicatorsPos[axis] = value;\n  }\n};\n\nDOMScroller.prototype.setIndicatorSize = function setIndicatorSize(axis, value) {\n  if (this.indicatorsSize[axis] !== value) {\n    this.indicators[axis].style[axis === 'x' ? 'width' : 'height'] = value + 'px';\n    this.indicatorsSize[axis] = value;\n  }\n};\n\nDOMScroller.prototype.reflow = function reflow() {\n  if (this.scrollbars) {\n    this.contentSize.x = this.content.offsetWidth;\n    this.contentSize.y = this.content.offsetHeight;\n    this.clientSize.x = this.container.clientWidth;\n    this.clientSize.y = this.container.clientHeight;\n    if (this.scrollbars.x) {\n      this.scrollbarsSize.x = this.scrollbars.x.offsetWidth;\n    }\n    if (this.scrollbars.y) {\n      this.scrollbarsSize.y = this.scrollbars.y.offsetHeight;\n    }\n  }\n  // set the right scroller dimensions\n  this.scroller.setDimensions(this.container.clientWidth, this.container.clientHeight, this.content.offsetWidth, this.content.offsetHeight);\n\n  // refresh the position for zooming purposes\n  var rect = this.container.getBoundingClientRect();\n  this.scroller.setPosition(rect.x + this.container.clientLeft, rect.y + this.container.clientTop);\n};\n\nDOMScroller.prototype.destroy = function destroy() {\n  this._destroyed = true;\n  window.removeEventListener('resize', this.onResize, false);\n  this.container.removeEventListener('touchstart', this.onTouchStart, false);\n  this.container.removeEventListener('touchmove', this.onTouchMove, false);\n  this.container.removeEventListener('touchend', this.onTouchEnd, false);\n  this.container.removeEventListener('touchcancel', this.onTouchCancel, false);\n  this.container.removeEventListener('mousedown', this.onMouseDown, false);\n  document.removeEventListener('mousemove', this.onMouseMove, false);\n  document.removeEventListener('mouseup', this.onMouseUp, false);\n  this.container.removeEventListener('mousewheel', this.onMouseWheel, false);\n};\n\nDOMScroller.prototype.bindEvents = function bindEvents() {\n  var _this2 = this;\n\n  var that = this;\n\n  // reflow handling\n  window.addEventListener('resize', this.onResize = function () {\n    that.reflow();\n  }, false);\n\n  var lockMouse = false;\n  var releaseLockTimer = void 0;\n\n  this.container.addEventListener('touchstart', this.onTouchStart = function (e) {\n    lockMouse = true;\n    if (releaseLockTimer) {\n      clearTimeout(releaseLockTimer);\n      releaseLockTimer = null;\n    }\n    // Don't react if initial down happens on a form element\n    if (e.touches[0] && e.touches[0].target && e.touches[0].target.tagName.match(/input|textarea|select/i) || _this2.disabled) {\n      return;\n    }\n    _this2.clearScrollbarTimer();\n    // reflow since the container may have changed\n    that.reflow();\n    that.scroller.doTouchStart(e.touches, e.timeStamp);\n  }, false);\n\n  this.container.addEventListener('touchmove', this.onTouchMove = function (e) {\n    if (_this2.options.preventDefaultOnTouchMove !== false) {\n      e.preventDefault();\n    }\n    that.scroller.doTouchMove(e.touches, e.timeStamp, e.scale);\n  }, false);\n\n  this.container.addEventListener('touchend', this.onTouchEnd = function (e) {\n    that.scroller.doTouchEnd(e.timeStamp);\n    releaseLockTimer = setTimeout(function () {\n      lockMouse = false;\n    }, 300);\n  }, false);\n\n  this.container.addEventListener('touchcancel', this.onTouchCancel = function (e) {\n    that.scroller.doTouchEnd(e.timeStamp);\n    releaseLockTimer = setTimeout(function () {\n      lockMouse = false;\n    }, 300);\n  }, false);\n\n  this.onMouseUp = function (e) {\n    that.scroller.doTouchEnd(e.timeStamp);\n    document.removeEventListener('mousemove', _this2.onMouseMove, false);\n    document.removeEventListener('mouseup', _this2.onMouseUp, false);\n  };\n\n  this.onMouseMove = function (e) {\n    that.scroller.doTouchMove([{\n      pageX: e.pageX,\n      pageY: e.pageY\n    }], e.timeStamp);\n  };\n\n  this.container.addEventListener('mousedown', this.onMouseDown = function (e) {\n    if (lockMouse || e.target.tagName.match(/input|textarea|select/i) || _this2.disabled) {\n      return;\n    }\n    _this2.clearScrollbarTimer();\n    that.scroller.doTouchStart([{\n      pageX: e.pageX,\n      pageY: e.pageY\n    }], e.timeStamp);\n    // reflow since the container may have changed\n    that.reflow();\n    e.preventDefault();\n    document.addEventListener('mousemove', _this2.onMouseMove, false);\n    document.addEventListener('mouseup', _this2.onMouseUp, false);\n  }, false);\n\n  this.container.addEventListener('mousewheel', this.onMouseWheel = function (e) {\n    if (that.options.zooming) {\n      that.scroller.doMouseZoom(e.wheelDelta, e.timeStamp, e.pageX, e.pageY);\n      e.preventDefault();\n    }\n  }, false);\n};\n\nexport default DOMScroller;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zscroller/es/DOMScroller.js\n// module id = 117\n// module chunks = 0 3","/*\n * Scroller\n * http://github.com/zynga/scroller\n *\n * Copyright 2011, Zynga Inc.\n * Licensed under the MIT License.\n * https://raw.github.com/zynga/scroller/master/MIT-LICENSE.txt\n *\n * Based on the work of: Unify Project (unify-project.org)\n * http://unify-project.org\n * Copyright 2011, Deutsche Telekom AG\n * License: MIT + Apache (V2)\n */\n\nimport Animate from './Animate';\n\nvar Scroller;\n\nvar NOOP = function NOOP() {};\n\n/**\n * A pure logic 'component' for 'virtual' scrolling/zooming.\n */\nScroller = function Scroller(callback, options) {\n\n  this.__callback = callback;\n\n  this.options = {\n\n    /** Enable scrolling on x-axis */\n    scrollingX: true,\n\n    /** Enable scrolling on y-axis */\n    scrollingY: true,\n\n    /** Enable animations for deceleration, snap back, zooming and scrolling */\n    animating: true,\n\n    /** duration for animations triggered by scrollTo/zoomTo */\n    animationDuration: 250,\n\n    /** Enable bouncing (content can be slowly moved outside and jumps back after releasing) */\n    bouncing: true,\n\n    /** Enable locking to the main axis if user moves only slightly on one of them at start */\n    locking: true,\n\n    /** Enable pagination mode (switching between full page content panes) */\n    paging: false,\n\n    /** Enable snapping of content to a configured pixel grid */\n    snapping: false,\n\n    /** Enable zooming of content via API, fingers and mouse wheel */\n    zooming: false,\n\n    /** Minimum zoom level */\n    minZoom: 0.5,\n\n    /** Maximum zoom level */\n    maxZoom: 3,\n\n    /** Multiply or decrease scrolling speed **/\n    speedMultiplier: 1,\n\n    /** Callback that is fired on the later of touch end or deceleration end,\n     provided that another scrolling action has not begun. Used to know\n     when to fade out a scrollbar. */\n    scrollingComplete: NOOP,\n\n    /** This configures the amount of change applied to deceleration when reaching boundaries  **/\n    penetrationDeceleration: 0.03,\n\n    /** This configures the amount of change applied to acceleration when reaching boundaries  **/\n    penetrationAcceleration: 0.08\n\n  };\n\n  for (var key in options) {\n    this.options[key] = options[key];\n  }\n};\n\n// Easing Equations (c) 2003 Robert Penner, all rights reserved.\n// Open source under the BSD License.\n\n/**\n * @param pos {Number} position between 0 (start of effect) and 1 (end of effect)\n **/\nvar easeOutCubic = function easeOutCubic(pos) {\n  return Math.pow(pos - 1, 3) + 1;\n};\n\n/**\n * @param pos {Number} position between 0 (start of effect) and 1 (end of effect)\n **/\nvar easeInOutCubic = function easeInOutCubic(pos) {\n  if ((pos /= 0.5) < 1) {\n    return 0.5 * Math.pow(pos, 3);\n  }\n\n  return 0.5 * (Math.pow(pos - 2, 3) + 2);\n};\n\nvar members = {\n\n  /*\n   ---------------------------------------------------------------------------\n   INTERNAL FIELDS :: STATUS\n   ---------------------------------------------------------------------------\n   */\n\n  /** {Boolean} Whether only a single finger is used in touch handling */\n  __isSingleTouch: false,\n\n  /** {Boolean} Whether a touch event sequence is in progress */\n  __isTracking: false,\n\n  /** {Boolean} Whether a deceleration animation went to completion. */\n  __didDecelerationComplete: false,\n\n  /**\n   * {Boolean} Whether a gesture zoom/rotate event is in progress. Activates when\n   * a gesturestart event happens. This has higher priority than dragging.\n   */\n  __isGesturing: false,\n\n  /**\n   * {Boolean} Whether the user has moved by such a distance that we have enabled\n   * dragging mode. Hint: It's only enabled after some pixels of movement to\n   * not interrupt with clicks etc.\n   */\n  __isDragging: false,\n\n  /**\n   * {Boolean} Not touching and dragging anymore, and smoothly animating the\n   * touch sequence using deceleration.\n   */\n  __isDecelerating: false,\n\n  /**\n   * {Boolean} Smoothly animating the currently configured change\n   */\n  __isAnimating: false,\n\n  /*\n   ---------------------------------------------------------------------------\n   INTERNAL FIELDS :: DIMENSIONS\n   ---------------------------------------------------------------------------\n   */\n\n  /** {Integer} Available outer left position (from document perspective) */\n  __clientLeft: 0,\n\n  /** {Integer} Available outer top position (from document perspective) */\n  __clientTop: 0,\n\n  /** {Integer} Available outer width */\n  __clientWidth: 0,\n\n  /** {Integer} Available outer height */\n  __clientHeight: 0,\n\n  /** {Integer} Outer width of content */\n  __contentWidth: 0,\n\n  /** {Integer} Outer height of content */\n  __contentHeight: 0,\n\n  /** {Integer} Snapping width for content */\n  __snapWidth: 100,\n\n  /** {Integer} Snapping height for content */\n  __snapHeight: 100,\n\n  /** {Integer} Height to assign to refresh area */\n  __refreshHeight: null,\n\n  /** {Boolean} Whether the refresh process is enabled when the event is released now */\n  __refreshActive: false,\n\n  /** {Function} Callback to execute on activation. This is for signalling the user about a refresh is about to happen when he release */\n  __refreshActivate: null,\n\n  /** {Function} Callback to execute on deactivation. This is for signalling the user about the refresh being cancelled */\n  __refreshDeactivate: null,\n\n  /** {Function} Callback to execute to start the actual refresh. Call {@link #refreshFinish} when done */\n  __refreshStart: null,\n\n  /** {Number} Zoom level */\n  __zoomLevel: 1,\n\n  /** {Number} Scroll position on x-axis */\n  __scrollLeft: 0,\n\n  /** {Number} Scroll position on y-axis */\n  __scrollTop: 0,\n\n  /** {Integer} Maximum allowed scroll position on x-axis */\n  __maxScrollLeft: 0,\n\n  /** {Integer} Maximum allowed scroll position on y-axis */\n  __maxScrollTop: 0,\n\n  /* {Number} Scheduled left position (final position when animating) */\n  __scheduledLeft: 0,\n\n  /* {Number} Scheduled top position (final position when animating) */\n  __scheduledTop: 0,\n\n  /* {Number} Scheduled zoom level (final scale when animating) */\n  __scheduledZoom: 0,\n\n  /*\n   ---------------------------------------------------------------------------\n   INTERNAL FIELDS :: LAST POSITIONS\n   ---------------------------------------------------------------------------\n   */\n\n  /** {Number} Left position of finger at start */\n  __lastTouchLeft: null,\n\n  /** {Number} Top position of finger at start */\n  __lastTouchTop: null,\n\n  /** {Date} Timestamp of last move of finger. Used to limit tracking range for deceleration speed. */\n  __lastTouchMove: null,\n\n  /** {Array} List of positions, uses three indexes for each state: left, top, timestamp */\n  __positions: null,\n\n  /*\n   ---------------------------------------------------------------------------\n   INTERNAL FIELDS :: DECELERATION SUPPORT\n   ---------------------------------------------------------------------------\n   */\n\n  /** {Integer} Minimum left scroll position during deceleration */\n  __minDecelerationScrollLeft: null,\n\n  /** {Integer} Minimum top scroll position during deceleration */\n  __minDecelerationScrollTop: null,\n\n  /** {Integer} Maximum left scroll position during deceleration */\n  __maxDecelerationScrollLeft: null,\n\n  /** {Integer} Maximum top scroll position during deceleration */\n  __maxDecelerationScrollTop: null,\n\n  /** {Number} Current factor to modify horizontal scroll position with on every step */\n  __decelerationVelocityX: null,\n\n  /** {Number} Current factor to modify vertical scroll position with on every step */\n  __decelerationVelocityY: null,\n\n  /*\n   ---------------------------------------------------------------------------\n   PUBLIC API\n   ---------------------------------------------------------------------------\n   */\n\n  /**\n   * Configures the dimensions of the client (outer) and content (inner) elements.\n   * Requires the available space for the outer element and the outer size of the inner element.\n   * All values which are falsy (null or zero etc.) are ignored and the old value is kept.\n   *\n   * @param clientWidth {Integer ? null} Inner width of outer element\n   * @param clientHeight {Integer ? null} Inner height of outer element\n   * @param contentWidth {Integer ? null} Outer width of inner element\n   * @param contentHeight {Integer ? null} Outer height of inner element\n   */\n  setDimensions: function setDimensions(clientWidth, clientHeight, contentWidth, contentHeight) {\n\n    var self = this;\n\n    // Only update values which are defined\n    if (clientWidth === +clientWidth) {\n      self.__clientWidth = clientWidth;\n    }\n\n    if (clientHeight === +clientHeight) {\n      self.__clientHeight = clientHeight;\n    }\n\n    if (contentWidth === +contentWidth) {\n      self.__contentWidth = contentWidth;\n    }\n\n    if (contentHeight === +contentHeight) {\n      self.__contentHeight = contentHeight;\n    }\n\n    // Refresh maximums\n    self.__computeScrollMax();\n\n    // Refresh scroll position\n    self.scrollTo(self.__scrollLeft, self.__scrollTop, true);\n  },\n\n  /**\n   * Sets the client coordinates in relation to the document.\n   *\n   * @param left {Integer ? 0} Left position of outer element\n   * @param top {Integer ? 0} Top position of outer element\n   */\n  setPosition: function setPosition(left, top) {\n\n    var self = this;\n\n    self.__clientLeft = left || 0;\n    self.__clientTop = top || 0;\n  },\n\n  /**\n   * Configures the snapping (when snapping is active)\n   *\n   * @param width {Integer} Snapping width\n   * @param height {Integer} Snapping height\n   */\n  setSnapSize: function setSnapSize(width, height) {\n\n    var self = this;\n\n    self.__snapWidth = width;\n    self.__snapHeight = height;\n  },\n\n  /**\n   * Activates pull-to-refresh. A special zone on the top of the list to start a list refresh whenever\n   * the user event is released during visibility of this zone. This was introduced by some apps on iOS like\n   * the official Twitter client.\n   *\n   * @param height {Integer} Height of pull-to-refresh zone on top of rendered list\n   * @param activateCallback {Function} Callback to execute on activation. This is for signalling the user about a refresh is about to happen when he release.\n   * @param deactivateCallback {Function} Callback to execute on deactivation. This is for signalling the user about the refresh being cancelled.\n   * @param startCallback {Function} Callback to execute to start the real async refresh action. Call {@link #finishPullToRefresh} after finish of refresh.\n   */\n  activatePullToRefresh: function activatePullToRefresh(height, activateCallback, deactivateCallback, startCallback) {\n\n    var self = this;\n\n    self.__refreshHeight = height;\n    self.__refreshActivate = activateCallback;\n    self.__refreshDeactivate = deactivateCallback;\n    self.__refreshStart = startCallback;\n  },\n\n  /**\n   * Starts pull-to-refresh manually.\n   */\n  triggerPullToRefresh: function triggerPullToRefresh() {\n    // Use publish instead of scrollTo to allow scrolling to out of boundary position\n    // We don't need to normalize scrollLeft, zoomLevel, etc. here because we only y-scrolling when pull-to-refresh is enabled\n    this.__publish(this.__scrollLeft, -this.__refreshHeight, this.__zoomLevel, true);\n\n    if (this.__refreshStart) {\n      this.__refreshStart();\n    }\n  },\n\n  /**\n   * Signalizes that pull-to-refresh is finished.\n   */\n  finishPullToRefresh: function finishPullToRefresh() {\n\n    var self = this;\n\n    self.__refreshActive = false;\n    if (self.__refreshDeactivate) {\n      self.__refreshDeactivate();\n    }\n\n    self.scrollTo(self.__scrollLeft, self.__scrollTop, true);\n  },\n\n  /**\n   * Returns the scroll position and zooming values\n   *\n   * @return {Map} `left` and `top` scroll position and `zoom` level\n   */\n  getValues: function getValues() {\n\n    var self = this;\n\n    return {\n      left: self.__scrollLeft,\n      top: self.__scrollTop,\n      zoom: self.__zoomLevel\n    };\n  },\n\n  /**\n   * Returns the maximum scroll values\n   *\n   * @return {Map} `left` and `top` maximum scroll values\n   */\n  getScrollMax: function getScrollMax() {\n\n    var self = this;\n\n    return {\n      left: self.__maxScrollLeft,\n      top: self.__maxScrollTop\n    };\n  },\n\n  /**\n   * Zooms to the given level. Supports optional animation. Zooms\n   * the center when no coordinates are given.\n   *\n   * @param level {Number} Level to zoom to\n   * @param animate {Boolean ? false} Whether to use animation\n   * @param originLeft {Number ? null} Zoom in at given left coordinate\n   * @param originTop {Number ? null} Zoom in at given top coordinate\n   * @param callback {Function ? null} A callback that gets fired when the zoom is complete.\n   */\n  zoomTo: function zoomTo(level, animate, originLeft, originTop, callback) {\n\n    var self = this;\n\n    if (!self.options.zooming) {\n      throw new Error(\"Zooming is not enabled!\");\n    }\n\n    // Add callback if exists\n    if (callback) {\n      self.__zoomComplete = callback;\n    }\n\n    // Stop deceleration\n    if (self.__isDecelerating) {\n      Animate.stop(self.__isDecelerating);\n      self.__isDecelerating = false;\n    }\n\n    var oldLevel = self.__zoomLevel;\n\n    // Normalize input origin to center of viewport if not defined\n    if (originLeft == null) {\n      originLeft = self.__clientWidth / 2;\n    }\n\n    if (originTop == null) {\n      originTop = self.__clientHeight / 2;\n    }\n\n    // Limit level according to configuration\n    level = Math.max(Math.min(level, self.options.maxZoom), self.options.minZoom);\n\n    // Recompute maximum values while temporary tweaking maximum scroll ranges\n    self.__computeScrollMax(level);\n\n    // Recompute left and top coordinates based on new zoom level\n    var left = (originLeft + self.__scrollLeft) * level / oldLevel - originLeft;\n    var top = (originTop + self.__scrollTop) * level / oldLevel - originTop;\n\n    // Limit x-axis\n    if (left > self.__maxScrollLeft) {\n      left = self.__maxScrollLeft;\n    } else if (left < 0) {\n      left = 0;\n    }\n\n    // Limit y-axis\n    if (top > self.__maxScrollTop) {\n      top = self.__maxScrollTop;\n    } else if (top < 0) {\n      top = 0;\n    }\n\n    // Push values out\n    self.__publish(left, top, level, animate);\n  },\n\n  /**\n   * Zooms the content by the given factor.\n   *\n   * @param factor {Number} Zoom by given factor\n   * @param animate {Boolean ? false} Whether to use animation\n   * @param originLeft {Number ? 0} Zoom in at given left coordinate\n   * @param originTop {Number ? 0} Zoom in at given top coordinate\n   * @param callback {Function ? null} A callback that gets fired when the zoom is complete.\n   */\n  zoomBy: function zoomBy(factor, animate, originLeft, originTop, callback) {\n\n    var self = this;\n\n    self.zoomTo(self.__zoomLevel * factor, animate, originLeft, originTop, callback);\n  },\n\n  /**\n   * Scrolls to the given position. Respect limitations and snapping automatically.\n   *\n   * @param left {Number?null} Horizontal scroll position, keeps current if value is <code>null</code>\n   * @param top {Number?null} Vertical scroll position, keeps current if value is <code>null</code>\n   * @param animate {Boolean?false} Whether the scrolling should happen using an animation\n   * @param zoom {Number?null} Zoom level to go to\n   */\n  scrollTo: function scrollTo(left, top, animate, zoom, callback) {\n\n    var self = this;\n\n    // Stop deceleration\n    if (self.__isDecelerating) {\n      Animate.stop(self.__isDecelerating);\n      self.__isDecelerating = false;\n    }\n\n    // Correct coordinates based on new zoom level\n    if (zoom != null && zoom !== self.__zoomLevel) {\n\n      if (!self.options.zooming) {\n        throw new Error(\"Zooming is not enabled!\");\n      }\n\n      left *= zoom;\n      top *= zoom;\n\n      // Recompute maximum values while temporary tweaking maximum scroll ranges\n      self.__computeScrollMax(zoom);\n    } else {\n\n      // Keep zoom when not defined\n      zoom = self.__zoomLevel;\n    }\n\n    if (!self.options.scrollingX) {\n\n      left = self.__scrollLeft;\n    } else {\n\n      if (self.options.paging) {\n        left = Math.round(left / self.__clientWidth) * self.__clientWidth;\n      } else if (self.options.snapping) {\n        left = Math.round(left / self.__snapWidth) * self.__snapWidth;\n      }\n    }\n\n    if (!self.options.scrollingY) {\n\n      top = self.__scrollTop;\n    } else {\n\n      if (self.options.paging) {\n        top = Math.round(top / self.__clientHeight) * self.__clientHeight;\n      } else if (self.options.snapping) {\n        top = Math.round(top / self.__snapHeight) * self.__snapHeight;\n      }\n    }\n\n    // Limit for allowed ranges\n    left = Math.max(Math.min(self.__maxScrollLeft, left), 0);\n    top = Math.max(Math.min(self.__maxScrollTop, top), 0);\n\n    // Don't animate when no change detected, still call publish to make sure\n    // that rendered position is really in-sync with internal data\n    if (left === self.__scrollLeft && top === self.__scrollTop) {\n      animate = false;\n      if (callback) {\n        callback();\n      }\n    }\n\n    // Publish new values\n    if (!self.__isTracking) {\n      self.__publish(left, top, zoom, animate);\n    }\n  },\n\n  /**\n   * Scroll by the given offset\n   *\n   * @param left {Number ? 0} Scroll x-axis by given offset\n   * @param top {Number ? 0} Scroll x-axis by given offset\n   * @param animate {Boolean ? false} Whether to animate the given change\n   */\n  scrollBy: function scrollBy(left, top, animate) {\n\n    var self = this;\n\n    var startLeft = self.__isAnimating ? self.__scheduledLeft : self.__scrollLeft;\n    var startTop = self.__isAnimating ? self.__scheduledTop : self.__scrollTop;\n\n    self.scrollTo(startLeft + (left || 0), startTop + (top || 0), animate);\n  },\n\n  /*\n   ---------------------------------------------------------------------------\n   EVENT CALLBACKS\n   ---------------------------------------------------------------------------\n   */\n\n  /**\n   * Mouse wheel handler for zooming support\n   */\n  doMouseZoom: function doMouseZoom(wheelDelta, timeStamp, pageX, pageY) {\n\n    var self = this;\n    var change = wheelDelta > 0 ? 0.97 : 1.03;\n\n    return self.zoomTo(self.__zoomLevel * change, false, pageX - self.__clientLeft, pageY - self.__clientTop);\n  },\n\n  /**\n   * Touch start handler for scrolling support\n   */\n  doTouchStart: function doTouchStart(touches, timeStamp) {\n\n    // Array-like check is enough here\n    if (touches.length == null) {\n      throw new Error(\"Invalid touch list: \" + touches);\n    }\n\n    if (timeStamp instanceof Date) {\n      timeStamp = timeStamp.valueOf();\n    }\n    if (typeof timeStamp !== \"number\") {\n      throw new Error(\"Invalid timestamp value: \" + timeStamp);\n    }\n\n    var self = this;\n\n    // Reset interruptedAnimation flag\n    self.__interruptedAnimation = true;\n\n    // Stop deceleration\n    if (self.__isDecelerating) {\n      Animate.stop(self.__isDecelerating);\n      self.__isDecelerating = false;\n      self.__interruptedAnimation = true;\n    }\n\n    // Stop animation\n    if (self.__isAnimating) {\n      Animate.stop(self.__isAnimating);\n      self.__isAnimating = false;\n      self.__interruptedAnimation = true;\n    }\n\n    // Use center point when dealing with two fingers\n    var currentTouchLeft, currentTouchTop;\n    var isSingleTouch = touches.length === 1;\n    if (isSingleTouch) {\n      currentTouchLeft = touches[0].pageX;\n      currentTouchTop = touches[0].pageY;\n    } else {\n      currentTouchLeft = Math.abs(touches[0].pageX + touches[1].pageX) / 2;\n      currentTouchTop = Math.abs(touches[0].pageY + touches[1].pageY) / 2;\n    }\n\n    // Store initial positions\n    self.__initialTouchLeft = currentTouchLeft;\n    self.__initialTouchTop = currentTouchTop;\n\n    // Store current zoom level\n    self.__zoomLevelStart = self.__zoomLevel;\n\n    // Store initial touch positions\n    self.__lastTouchLeft = currentTouchLeft;\n    self.__lastTouchTop = currentTouchTop;\n\n    // Store initial move time stamp\n    self.__lastTouchMove = timeStamp;\n\n    // Reset initial scale\n    self.__lastScale = 1;\n\n    // Reset locking flags\n    self.__enableScrollX = !isSingleTouch && self.options.scrollingX;\n    self.__enableScrollY = !isSingleTouch && self.options.scrollingY;\n\n    // Reset tracking flag\n    self.__isTracking = true;\n\n    // Reset deceleration complete flag\n    self.__didDecelerationComplete = false;\n\n    // Dragging starts directly with two fingers, otherwise lazy with an offset\n    self.__isDragging = !isSingleTouch;\n\n    // Some features are disabled in multi touch scenarios\n    self.__isSingleTouch = isSingleTouch;\n\n    // Clearing data structure\n    self.__positions = [];\n  },\n\n  /**\n   * Touch move handler for scrolling support\n   */\n  doTouchMove: function doTouchMove(touches, timeStamp, scale) {\n\n    // Array-like check is enough here\n    if (touches.length == null) {\n      throw new Error(\"Invalid touch list: \" + touches);\n    }\n\n    if (timeStamp instanceof Date) {\n      timeStamp = timeStamp.valueOf();\n    }\n    if (typeof timeStamp !== \"number\") {\n      throw new Error(\"Invalid timestamp value: \" + timeStamp);\n    }\n\n    var self = this;\n\n    // Ignore event when tracking is not enabled (event might be outside of element)\n    if (!self.__isTracking) {\n      return;\n    }\n\n    var currentTouchLeft, currentTouchTop;\n\n    // Compute move based around of center of fingers\n    if (touches.length === 2) {\n      currentTouchLeft = Math.abs(touches[0].pageX + touches[1].pageX) / 2;\n      currentTouchTop = Math.abs(touches[0].pageY + touches[1].pageY) / 2;\n    } else {\n      currentTouchLeft = touches[0].pageX;\n      currentTouchTop = touches[0].pageY;\n    }\n\n    var positions = self.__positions;\n\n    // Are we already is dragging mode?\n    if (self.__isDragging) {\n\n      // Compute move distance\n      var moveX = currentTouchLeft - self.__lastTouchLeft;\n      var moveY = currentTouchTop - self.__lastTouchTop;\n\n      // Read previous scroll position and zooming\n      var scrollLeft = self.__scrollLeft;\n      var scrollTop = self.__scrollTop;\n      var level = self.__zoomLevel;\n\n      // Work with scaling\n      if (scale != null && self.options.zooming) {\n\n        var oldLevel = level;\n\n        // Recompute level based on previous scale and new scale\n        level = level / self.__lastScale * scale;\n\n        // Limit level according to configuration\n        level = Math.max(Math.min(level, self.options.maxZoom), self.options.minZoom);\n\n        // Only do further compution when change happened\n        if (oldLevel !== level) {\n\n          // Compute relative event position to container\n          var currentTouchLeftRel = currentTouchLeft - self.__clientLeft;\n          var currentTouchTopRel = currentTouchTop - self.__clientTop;\n\n          // Recompute left and top coordinates based on new zoom level\n          scrollLeft = (currentTouchLeftRel + scrollLeft) * level / oldLevel - currentTouchLeftRel;\n          scrollTop = (currentTouchTopRel + scrollTop) * level / oldLevel - currentTouchTopRel;\n\n          // Recompute max scroll values\n          self.__computeScrollMax(level);\n        }\n      }\n\n      if (self.__enableScrollX) {\n\n        scrollLeft -= moveX * this.options.speedMultiplier;\n        var maxScrollLeft = self.__maxScrollLeft;\n\n        if (scrollLeft > maxScrollLeft || scrollLeft < 0) {\n\n          // Slow down on the edges\n          if (self.options.bouncing) {\n\n            scrollLeft += moveX / 2 * this.options.speedMultiplier;\n          } else if (scrollLeft > maxScrollLeft) {\n\n            scrollLeft = maxScrollLeft;\n          } else {\n\n            scrollLeft = 0;\n          }\n        }\n      }\n\n      // Compute new vertical scroll position\n      if (self.__enableScrollY) {\n\n        scrollTop -= moveY * this.options.speedMultiplier;\n        var maxScrollTop = self.__maxScrollTop;\n\n        if (scrollTop > maxScrollTop || scrollTop < 0) {\n\n          // Slow down on the edges\n          if (self.options.bouncing) {\n\n            scrollTop += moveY / 2 * this.options.speedMultiplier;\n\n            // Support pull-to-refresh (only when only y is scrollable)\n            if (!self.__enableScrollX && self.__refreshHeight != null) {\n\n              if (!self.__refreshActive && scrollTop <= -self.__refreshHeight) {\n\n                self.__refreshActive = true;\n                if (self.__refreshActivate) {\n                  self.__refreshActivate();\n                }\n              } else if (self.__refreshActive && scrollTop > -self.__refreshHeight) {\n\n                self.__refreshActive = false;\n                if (self.__refreshDeactivate) {\n                  self.__refreshDeactivate();\n                }\n              }\n            }\n          } else if (scrollTop > maxScrollTop) {\n\n            scrollTop = maxScrollTop;\n          } else {\n\n            scrollTop = 0;\n          }\n        }\n      }\n\n      // Keep list from growing infinitely (holding min 10, max 20 measure points)\n      if (positions.length > 60) {\n        positions.splice(0, 30);\n      }\n\n      // Track scroll movement for decleration\n      positions.push(scrollLeft, scrollTop, timeStamp);\n\n      // Sync scroll position\n      self.__publish(scrollLeft, scrollTop, level);\n\n      // Otherwise figure out whether we are switching into dragging mode now.\n    } else {\n\n      var minimumTrackingForScroll = 3;\n      var minimumTrackingForDrag = 5;\n\n      var distanceX = Math.abs(currentTouchLeft - self.__initialTouchLeft);\n      var distanceY = Math.abs(currentTouchTop - self.__initialTouchTop);\n\n      self.__enableScrollX = self.options.scrollingX && distanceX >= minimumTrackingForScroll;\n      self.__enableScrollY = self.options.scrollingY && distanceY >= minimumTrackingForScroll;\n\n      var radian = void 0;\n\n      if (self.options.locking && self.__enableScrollY) {\n        radian = radian || Math.atan2(distanceY, distanceX);\n        if (radian < Math.PI / 4) {\n          self.__enableScrollY = false;\n        }\n      }\n\n      if (self.options.locking && self.__enableScrollX) {\n        radian = radian || Math.atan2(distanceY, distanceX);\n        if (radian > Math.PI / 4) {\n          self.__enableScrollX = false;\n        }\n      }\n\n      positions.push(self.__scrollLeft, self.__scrollTop, timeStamp);\n\n      self.__isDragging = (self.__enableScrollX || self.__enableScrollY) && (distanceX >= minimumTrackingForDrag || distanceY >= minimumTrackingForDrag);\n      if (self.__isDragging) {\n        self.__interruptedAnimation = false;\n      }\n    }\n\n    // Update last touch positions and time stamp for next event\n    self.__lastTouchLeft = currentTouchLeft;\n    self.__lastTouchTop = currentTouchTop;\n    self.__lastTouchMove = timeStamp;\n    self.__lastScale = scale;\n  },\n\n  /**\n   * Touch end handler for scrolling support\n   */\n  doTouchEnd: function doTouchEnd(timeStamp) {\n\n    if (timeStamp instanceof Date) {\n      timeStamp = timeStamp.valueOf();\n    }\n    if (typeof timeStamp !== \"number\") {\n      throw new Error(\"Invalid timestamp value: \" + timeStamp);\n    }\n\n    var self = this;\n\n    // Ignore event when tracking is not enabled (no touchstart event on element)\n    // This is required as this listener ('touchmove') sits on the document and not on the element itself.\n    if (!self.__isTracking) {\n      return;\n    }\n\n    // Not touching anymore (when two finger hit the screen there are two touch end events)\n    self.__isTracking = false;\n\n    // Be sure to reset the dragging flag now. Here we also detect whether\n    // the finger has moved fast enough to switch into a deceleration animation.\n    if (self.__isDragging) {\n\n      // Reset dragging flag\n      self.__isDragging = false;\n\n      // Start deceleration\n      // Verify that the last move detected was in some relevant time frame\n      if (self.__isSingleTouch && self.options.animating && timeStamp - self.__lastTouchMove <= 100) {\n\n        // Then figure out what the scroll position was about 100ms ago\n        var positions = self.__positions;\n        var endPos = positions.length - 1;\n        var startPos = endPos;\n\n        // Move pointer to position measured 100ms ago\n        for (var i = endPos; i > 0 && positions[i] > self.__lastTouchMove - 100; i -= 3) {\n          startPos = i;\n        }\n\n        // If start and stop position is identical in a 100ms timeframe,\n        // we cannot compute any useful deceleration.\n        if (startPos !== endPos) {\n\n          // Compute relative movement between these two points\n          var timeOffset = positions[endPos] - positions[startPos];\n          var movedLeft = self.__scrollLeft - positions[startPos - 2];\n          var movedTop = self.__scrollTop - positions[startPos - 1];\n\n          // Based on 50ms compute the movement to apply for each render step\n          self.__decelerationVelocityX = movedLeft / timeOffset * (1000 / 60);\n          self.__decelerationVelocityY = movedTop / timeOffset * (1000 / 60);\n\n          // How much velocity is required to start the deceleration\n          var minVelocityToStartDeceleration = self.options.paging || self.options.snapping ? 4 : 1;\n\n          // Verify that we have enough velocity to start deceleration\n          if (Math.abs(self.__decelerationVelocityX) > minVelocityToStartDeceleration || Math.abs(self.__decelerationVelocityY) > minVelocityToStartDeceleration) {\n\n            // Deactivate pull-to-refresh when decelerating\n            if (!self.__refreshActive) {\n              self.__startDeceleration(timeStamp);\n            }\n          } else {\n            self.options.scrollingComplete();\n          }\n        } else {\n          self.options.scrollingComplete();\n        }\n      } else if (timeStamp - self.__lastTouchMove > 100) {\n        self.options.scrollingComplete();\n      }\n    }\n\n    // If this was a slower move it is per default non decelerated, but this\n    // still means that we want snap back to the bounds which is done here.\n    // This is placed outside the condition above to improve edge case stability\n    // e.g. touchend fired without enabled dragging. This should normally do not\n    // have modified the scroll positions or even showed the scrollbars though.\n    if (!self.__isDecelerating) {\n\n      if (self.__refreshActive && self.__refreshStart) {\n\n        // Use publish instead of scrollTo to allow scrolling to out of boundary position\n        // We don't need to normalize scrollLeft, zoomLevel, etc. here because we only y-scrolling when pull-to-refresh is enabled\n        self.__publish(self.__scrollLeft, -self.__refreshHeight, self.__zoomLevel, true);\n\n        if (self.__refreshStart) {\n          self.__refreshStart();\n        }\n      } else {\n\n        if (self.__interruptedAnimation || self.__isDragging) {\n          self.options.scrollingComplete();\n        }\n        self.scrollTo(self.__scrollLeft, self.__scrollTop, true, self.__zoomLevel);\n\n        // Directly signalize deactivation (nothing todo on refresh?)\n        if (self.__refreshActive) {\n\n          self.__refreshActive = false;\n          if (self.__refreshDeactivate) {\n            self.__refreshDeactivate();\n          }\n        }\n      }\n    }\n\n    // Fully cleanup list\n    self.__positions.length = 0;\n  },\n\n  /*\n   ---------------------------------------------------------------------------\n   PRIVATE API\n   ---------------------------------------------------------------------------\n   */\n\n  /**\n   * Applies the scroll position to the content element\n   *\n   * @param left {Number} Left scroll position\n   * @param top {Number} Top scroll position\n   * @param animate {Boolean?false} Whether animation should be used to move to the new coordinates\n   */\n  __publish: function __publish(left, top, zoom, animate) {\n\n    var self = this;\n\n    // Remember whether we had an animation, then we try to continue based on the current \"drive\" of the animation\n    var wasAnimating = self.__isAnimating;\n    if (wasAnimating) {\n      Animate.stop(wasAnimating);\n      self.__isAnimating = false;\n    }\n\n    if (animate && self.options.animating) {\n\n      // Keep scheduled positions for scrollBy/zoomBy functionality\n      self.__scheduledLeft = left;\n      self.__scheduledTop = top;\n      self.__scheduledZoom = zoom;\n\n      var oldLeft = self.__scrollLeft;\n      var oldTop = self.__scrollTop;\n      var oldZoom = self.__zoomLevel;\n\n      var diffLeft = left - oldLeft;\n      var diffTop = top - oldTop;\n      var diffZoom = zoom - oldZoom;\n\n      var step = function step(percent, now, render) {\n\n        if (render) {\n\n          self.__scrollLeft = oldLeft + diffLeft * percent;\n          self.__scrollTop = oldTop + diffTop * percent;\n          self.__zoomLevel = oldZoom + diffZoom * percent;\n\n          // Push values out\n          if (self.__callback) {\n            self.__callback(self.__scrollLeft, self.__scrollTop, self.__zoomLevel);\n          }\n        }\n      };\n\n      var verify = function verify(id) {\n        return self.__isAnimating === id;\n      };\n\n      var completed = function completed(renderedFramesPerSecond, animationId, wasFinished) {\n        if (animationId === self.__isAnimating) {\n          self.__isAnimating = false;\n        }\n\n        if (self.__didDecelerationComplete || wasFinished) {\n          self.options.scrollingComplete();\n        }\n\n        if (self.options.zooming) {\n          self.__computeScrollMax();\n          if (self.__zoomComplete) {\n            self.__zoomComplete();\n            self.__zoomComplete = null;\n          }\n        }\n      };\n\n      // When continuing based on previous animation we choose an ease-out animation instead of ease-in-out\n      self.__isAnimating = Animate.start(step, verify, completed, self.options.animationDuration, wasAnimating ? easeOutCubic : easeInOutCubic);\n    } else {\n\n      self.__scheduledLeft = self.__scrollLeft = left;\n      self.__scheduledTop = self.__scrollTop = top;\n      self.__scheduledZoom = self.__zoomLevel = zoom;\n\n      // Push values out\n      if (self.__callback) {\n        self.__callback(left, top, zoom);\n      }\n\n      // Fix max scroll ranges\n      if (self.options.zooming) {\n        self.__computeScrollMax();\n        if (self.__zoomComplete) {\n          self.__zoomComplete();\n          self.__zoomComplete = null;\n        }\n      }\n    }\n  },\n\n  /**\n   * Recomputes scroll minimum values based on client dimensions and content dimensions.\n   */\n  __computeScrollMax: function __computeScrollMax(zoomLevel) {\n\n    var self = this;\n\n    if (zoomLevel == null) {\n      zoomLevel = self.__zoomLevel;\n    }\n\n    self.__maxScrollLeft = Math.max(self.__contentWidth * zoomLevel - self.__clientWidth, 0);\n    self.__maxScrollTop = Math.max(self.__contentHeight * zoomLevel - self.__clientHeight, 0);\n  },\n\n  /*\n   ---------------------------------------------------------------------------\n   ANIMATION (DECELERATION) SUPPORT\n   ---------------------------------------------------------------------------\n   */\n\n  /**\n   * Called when a touch sequence end and the speed of the finger was high enough\n   * to switch into deceleration mode.\n   */\n  __startDeceleration: function __startDeceleration(timeStamp) {\n\n    var self = this;\n\n    if (self.options.paging) {\n\n      var scrollLeft = Math.max(Math.min(self.__scrollLeft, self.__maxScrollLeft), 0);\n      var scrollTop = Math.max(Math.min(self.__scrollTop, self.__maxScrollTop), 0);\n      var clientWidth = self.__clientWidth;\n      var clientHeight = self.__clientHeight;\n\n      // We limit deceleration not to the min/max values of the allowed range, but to the size of the visible client area.\n      // Each page should have exactly the size of the client area.\n      self.__minDecelerationScrollLeft = Math.floor(scrollLeft / clientWidth) * clientWidth;\n      self.__minDecelerationScrollTop = Math.floor(scrollTop / clientHeight) * clientHeight;\n      self.__maxDecelerationScrollLeft = Math.ceil(scrollLeft / clientWidth) * clientWidth;\n      self.__maxDecelerationScrollTop = Math.ceil(scrollTop / clientHeight) * clientHeight;\n    } else {\n\n      self.__minDecelerationScrollLeft = 0;\n      self.__minDecelerationScrollTop = 0;\n      self.__maxDecelerationScrollLeft = self.__maxScrollLeft;\n      self.__maxDecelerationScrollTop = self.__maxScrollTop;\n    }\n\n    // Wrap class method\n    var step = function step(percent, now, render) {\n      self.__stepThroughDeceleration(render);\n    };\n\n    // How much velocity is required to keep the deceleration running\n    // added by yiminghe\n    var minVelocityToKeepDecelerating = self.options.minVelocityToKeepDecelerating;\n\n    if (!minVelocityToKeepDecelerating) {\n      minVelocityToKeepDecelerating = self.options.snapping ? 4 : 0.001;\n    }\n\n    // Detect whether it's still worth to continue animating steps\n    // If we are already slow enough to not being user perceivable anymore, we stop the whole process here.\n    var verify = function verify() {\n      var shouldContinue = Math.abs(self.__decelerationVelocityX) >= minVelocityToKeepDecelerating || Math.abs(self.__decelerationVelocityY) >= minVelocityToKeepDecelerating;\n      if (!shouldContinue) {\n        self.__didDecelerationComplete = true;\n      }\n      return shouldContinue;\n    };\n\n    var completed = function completed(renderedFramesPerSecond, animationId, wasFinished) {\n      self.__isDecelerating = false;\n      // Animate to grid when snapping is active, otherwise just fix out-of-boundary positions\n      // fixed by yiminghe, in case call scrollingComplete twice\n      self.scrollTo(self.__scrollLeft, self.__scrollTop, self.options.snapping, null, self.__didDecelerationComplete && self.options.scrollingComplete);\n    };\n\n    // Start animation and switch on flag\n    self.__isDecelerating = Animate.start(step, verify, completed);\n  },\n\n  /**\n   * Called on every step of the animation\n   *\n   * @param inMemory {Boolean?false} Whether to not render the current step, but keep it in memory only. Used internally only!\n   */\n  __stepThroughDeceleration: function __stepThroughDeceleration(render) {\n\n    var self = this;\n\n    //\n    // COMPUTE NEXT SCROLL POSITION\n    //\n\n    // Add deceleration to scroll position\n    var scrollLeft = self.__scrollLeft + self.__decelerationVelocityX;\n    var scrollTop = self.__scrollTop + self.__decelerationVelocityY;\n\n    //\n    // HARD LIMIT SCROLL POSITION FOR NON BOUNCING MODE\n    //\n\n    if (!self.options.bouncing) {\n\n      var scrollLeftFixed = Math.max(Math.min(self.__maxDecelerationScrollLeft, scrollLeft), self.__minDecelerationScrollLeft);\n      if (scrollLeftFixed !== scrollLeft) {\n        scrollLeft = scrollLeftFixed;\n        self.__decelerationVelocityX = 0;\n      }\n\n      var scrollTopFixed = Math.max(Math.min(self.__maxDecelerationScrollTop, scrollTop), self.__minDecelerationScrollTop);\n      if (scrollTopFixed !== scrollTop) {\n        scrollTop = scrollTopFixed;\n        self.__decelerationVelocityY = 0;\n      }\n    }\n\n    //\n    // UPDATE SCROLL POSITION\n    //\n\n    if (render) {\n\n      self.__publish(scrollLeft, scrollTop, self.__zoomLevel);\n    } else {\n\n      self.__scrollLeft = scrollLeft;\n      self.__scrollTop = scrollTop;\n    }\n\n    //\n    // SLOW DOWN\n    //\n\n    // Slow down velocity on every iteration\n    if (!self.options.paging) {\n\n      // This is the factor applied to every iteration of the animation\n      // to slow down the process. This should emulate natural behavior where\n      // objects slow down when the initiator of the movement is removed\n      var frictionFactor = 0.95;\n\n      self.__decelerationVelocityX *= frictionFactor;\n      self.__decelerationVelocityY *= frictionFactor;\n    }\n\n    //\n    // BOUNCING SUPPORT\n    //\n\n    if (self.options.bouncing) {\n\n      var scrollOutsideX = 0;\n      var scrollOutsideY = 0;\n\n      // This configures the amount of change applied to deceleration/acceleration when reaching boundaries\n      var penetrationDeceleration = self.options.penetrationDeceleration;\n      var penetrationAcceleration = self.options.penetrationAcceleration;\n\n      // Check limits\n      if (scrollLeft < self.__minDecelerationScrollLeft) {\n        scrollOutsideX = self.__minDecelerationScrollLeft - scrollLeft;\n      } else if (scrollLeft > self.__maxDecelerationScrollLeft) {\n        scrollOutsideX = self.__maxDecelerationScrollLeft - scrollLeft;\n      }\n\n      if (scrollTop < self.__minDecelerationScrollTop) {\n        scrollOutsideY = self.__minDecelerationScrollTop - scrollTop;\n      } else if (scrollTop > self.__maxDecelerationScrollTop) {\n        scrollOutsideY = self.__maxDecelerationScrollTop - scrollTop;\n      }\n\n      // Slow down until slow enough, then flip back to snap position\n      if (scrollOutsideX !== 0) {\n        if (scrollOutsideX * self.__decelerationVelocityX <= 0) {\n          self.__decelerationVelocityX += scrollOutsideX * penetrationDeceleration;\n        } else {\n          self.__decelerationVelocityX = scrollOutsideX * penetrationAcceleration;\n        }\n      }\n\n      if (scrollOutsideY !== 0) {\n        if (scrollOutsideY * self.__decelerationVelocityY <= 0) {\n          self.__decelerationVelocityY += scrollOutsideY * penetrationDeceleration;\n        } else {\n          self.__decelerationVelocityY = scrollOutsideY * penetrationAcceleration;\n        }\n      }\n    }\n  }\n};\n\n// Copy over members to prototype\nfor (var key in members) {\n  Scroller.prototype[key] = members[key];\n}\n\nexport default Scroller;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zscroller/es/Scroller.js\n// module id = 118\n// module chunks = 0 3","/* eslint-disable no-console */\n/* eslint no-dupe-keys: 0, no-mixed-operators: 0 */\nimport '../assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ListView from '../src';\nimport Zscroller from '../src/Zscroller';\n\nconst data = [\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n    title: 'Meet hotel',\n    des: '不是所有的兼职汪都需要风吹日晒',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n    title: 'McDonald\\'s invites you',\n    des: '不是所有的兼职汪都需要风吹日晒',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n    title: 'Eat the week',\n    des: '不是所有的兼职汪都需要风吹日晒',\n  },\n];\nlet index = data.length - 1;\n\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n  const dataArr = [];\n  for (let i = 0; i < NUM_ROWS; i++) {\n    dataArr.push(`row - ${(pIndex * NUM_ROWS) + i}`);\n  }\n  return dataArr;\n}\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2,\n    });\n\n    this.state = {\n      dataSource,\n      refreshing: true,\n      height: document.documentElement.clientHeight,\n    };\n  }\n\n  // If you use redux, the data maybe at props, you need use `componentWillReceiveProps`\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.dataSource !== this.props.dataSource) {\n  //     this.setState({\n  //       dataSource: this.state.dataSource.cloneWithRows(nextProps.dataSource),\n  //     });\n  //   }\n  // }\n\n  componentDidMount() {\n    document.body.style.overflowY =\n      navigator.userAgent.match(/Android|iPhone|iPad|iPod/i) ? 'hidden' : 'auto';\n\n    // handle https://github.com/ant-design/ant-design-mobile/issues/1588\n    this.lv.getInnerViewNode().addEventListener('touchstart', this.ts = (e) => {\n      this.tsPageY = e.touches[0].pageY;\n    });\n    // In chrome61 `document.body.scrollTop` is invalid\n    const scrollNode = document.scrollingElement ? document.scrollingElement : document.body;\n    this.lv.getInnerViewNode().addEventListener('touchmove', this.tm = (e) => {\n      this.tmPageY = e.touches[0].pageY;\n      if (this.tmPageY > this.tsPageY && this.scrollerTop <= 0 && scrollNode.scrollTop > 0) {\n        console.log('start pull to refresh');\n        this.domScroller.options.preventDefaultOnTouchMove = false;\n      } else {\n        this.domScroller.options.preventDefaultOnTouchMove = undefined;\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.lv.getInnerViewNode().removeEventListener('touchstart', this.ts);\n    this.lv.getInnerViewNode().removeEventListener('touchmove', this.tm);\n  }\n\n  onScroll = (e) => {\n    // onScroll will trigger on container touchstart, ref https://github.com/yiminghe/zscroller/blob/a67854c8dc0a1fda15acae4ffdb08e65aac79fb3/src/DOMScroller.js#L229\n    this.scrollerTop = e.scroller.getValues().top;\n    this.domScroller = e;\n  };\n\n  onRefresh = () => {\n    console.log('onRefresh');\n    if (!this.manuallyRefresh) {\n      this.setState({ refreshing: true, isLoading: true });\n    } else {\n      this.manuallyRefresh = false;\n    }\n\n    // simulate initial Ajax\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        refreshing: false,\n        isLoading: false,\n        showFinishTxt: true,\n      });\n      if (this.domScroller) {\n        this.domScroller.scroller.options.animationDuration = 500;\n      }\n    }, 200);\n  };\n\n  onEndReached = (event) => {\n    console.log('fire onEndReached');\n    // load new data\n    // hasMore: from backend data, indicates whether it is the last page, here is false\n    if (this.state.isLoading && !this.state.hasMore) {\n      return;\n    }\n    console.log('reach end', event);\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      this.rData = [...this.rData, ...genData(++pageIndex)];\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false,\n      });\n    }, 1000);\n  };\n\n  scrollingComplete = () => {\n    // In general, this.scrollerTop should be 0 at the end, but it may be -0.000051 in chrome61.\n    if (this.scrollerTop >= -1) {\n      this.setState({ showFinishTxt: false });\n    }\n  }\n\n  renderCustomIcon() {\n    return [\n      <div key=\"0\" className=\"zscroller-refresh-control-pull\">\n        <span>{this.state.showFinishTxt ? '刷新完毕' : '下拉可以刷新'}</span>\n      </div>,\n      <div key=\"1\" className=\"zscroller-refresh-control-release\">\n        <span>松开立即刷新</span>\n      </div>,\n    ];\n  }\n\n  render() {\n    return (\n      <ListView\n        ref={el => this.lv = el}\n        dataSource={this.state.dataSource}\n        style={{ height: 400, border: '1px solid #ddd', margin: '10px 0' }}\n        renderScrollComponent={props => <Zscroller {...props} />}\n        renderHeader={() => <span>Pull to refresh</span>}\n        renderFooter={() => (<div style={{ padding: 30, textAlign: 'center' }}>\n          {this.state.isLoading ? 'Loading...' : 'Loaded'}\n        </div>)}\n        renderRow={(rowData, sectionID, rowID) => {\n          if (index < 0) {\n            index = data.length - 1;\n          }\n          const obj = data[index--];\n          return (\n            <div key={rowID} style={{ padding: '8px 16px' }}>\n              <h3>{obj.title}</h3>\n              <div style={{ display: 'flex' }}>\n                <img style={{ height: 64, marginRight: 8 }} src={obj.img} />\n                <div style={{ display: 'inline-block' }}>\n                  <div>{rowData}-{obj.des}</div>\n                  <div style={{ color: '#FF6E27', marginTop: 15 }}>{rowID}</div>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n        renderSeparator={(sectionID, rowID) => (\n          <div key={`${sectionID}-${rowID}`} style={{ backgroundColor: '#F5F5F9', height: 8 }} />\n        )}\n        scrollerOptions={{ scrollbars: true, scrollingComplete: this.scrollingComplete }}\n        refreshControl\n        refreshing={this.state.refreshing}\n        onRefresh={this.onRefresh}\n        icon={this.renderCustomIcon()}\n        onScroll={this.onScroll}\n        onEndReached={this.onEndReached}\n        onEndReachedThreshold={10}\n        pageSize={10}\n      />\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/zscroller-pulldown.js","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/array/from.js\n// module id = 42\n// module chunks = 0 1 2","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/toConsumableArray.js\n// module id = 43\n// module chunks = 0 1 2","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/fn/array/from.js\n// module id = 44\n// module chunks = 0 1 2","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_classof.js\n// module id = 45\n// module chunks = 0 1 2","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_create-property.js\n// module id = 47\n// module chunks = 0 1 2","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_is-array-iter.js\n// module id = 50\n// module chunks = 0 1 2","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_iter-call.js\n// module id = 52\n// module chunks = 0 1 2","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_iter-detect.js\n// module id = 53\n// module chunks = 0 1 2","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/core.get-iterator-method.js\n// module id = 55\n// module chunks = 0 1 2","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.array.from.js\n// module id = 56\n// module chunks = 0 1 2","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 63\n// module chunks = 0 3","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DOMScroller from 'zscroller';\nimport classNames from 'classnames';\nimport { throttle } from './util';\n\n/* eslint react/prop-types: 0, react/sort-comp: 0, no-unused-expressions: 0 */\n\nexport default class ScrollView extends React.Component {\n  static propTypes = {\n    children: PropTypes.any,\n    className: PropTypes.string,\n    prefixCls: PropTypes.string,\n    listPrefixCls: PropTypes.string,\n    listViewPrefixCls: PropTypes.string,\n    style: PropTypes.object,\n    contentContainerStyle: PropTypes.object,\n    onScroll: PropTypes.func,\n    refreshControl: PropTypes.bool,\n    icon: PropTypes.any,\n    loading: PropTypes.any,\n    distanceToRefresh: PropTypes.number,\n    refreshing: PropTypes.bool,\n    onRefresh: PropTypes.func,\n  };\n\n  static defaultProps = {\n    prefixCls: 'zscroller',\n    distanceToRefresh: 25,\n    refreshing: false,\n    icon: [\n      <div key=\"0\" className=\"zscroller-refresh-control-pull\">\n        ↓ 下拉\n      </div>,\n      <div key=\"1\" className=\"zscroller-refresh-control-release\">\n        ↑ 释放\n      </div>,\n    ],\n    loading: <div>loading...</div>,\n  };\n\n  state = {\n    active: false,\n    deactive: false,\n    loadingState: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.refreshControl && this.props.refreshControl) {\n      const preRefreshing = prevProps.refreshing;\n      const nowRefreshing = this.props.refreshing;\n      if (preRefreshing && !nowRefreshing && !this._refreshControlTimer) {\n        this.domScroller.scroller.finishPullToRefresh();\n      } else if (!this.manuallyRefresh && !preRefreshing && nowRefreshing) {\n        this.domScroller.scroller.triggerPullToRefresh();\n      }\n    }\n  }\n  componentDidMount() {\n    let handleScroll = () =>\n      this.props.onScroll && this.props.onScroll(this.domScroller, this.getMetrics());\n    if (this.props.scrollEventThrottle) {\n      handleScroll = throttle(handleScroll, this.props.scrollEventThrottle);\n    }\n    this.handleScroll = handleScroll;\n    this.renderZscroller();\n  }\n  componentWillUnmount() {\n    this.domScroller.destroy();\n  }\n\n  getMetrics = () => {\n    const isVertical = !this.props.horizontal;\n    return {\n      visibleLength: this.domScroller.container[isVertical ? 'clientHeight' : 'clientWidth'],\n      contentLength: this.domScroller.content[isVertical ? 'offsetHeight' : 'offsetWidth'],\n      offset: this.domScroller.scroller.getValues()[isVertical ? 'top' : 'left'],\n    };\n  }\n\n  getInnerViewNode = () => this.InnerScrollViewRef;\n\n  scrollTo = (...args) => {\n    // it will change zScroller's dimensions on data loaded, so it needs fire reflow.\n    this.domScroller.reflow();\n    this.domScroller.scroller.scrollTo(...args);\n  }\n\n  renderZscroller() {\n    const { scrollerOptions, refreshControl, distanceToRefresh, onRefresh } = this.props;\n    const { scrollingComplete, ...restProps } = scrollerOptions;\n    this.domScroller = new DOMScroller(this.getInnerViewNode(), {\n      scrollingX: false,\n      onScroll: this.handleScroll,\n      scrollingComplete: () => {\n        if (refreshControl && this.state.deactive) {\n          this.setState({ deactive: false });\n        }\n        if (scrollingComplete) {\n          scrollingComplete();\n        }\n      },\n      ...restProps,\n    });\n    if (refreshControl) {\n      const scroller = this.domScroller.scroller;\n      scroller.activatePullToRefresh(distanceToRefresh,\n        () => {\n          // console.log('reach to the distance');\n          this.manuallyRefresh = true;\n          this.overDistanceThenRelease = false;\n          this.setState({ active: true });\n        },\n        () => {\n          // console.log('back to the distance');\n          this.manuallyRefresh = false;\n          this.setState({\n            deactive: this.overDistanceThenRelease,\n            active: false,\n            loadingState: false,\n          });\n        },\n        () => {\n          // console.log('Over distance and release to loading');\n          this.overDistanceThenRelease = true;\n          this.setState({\n            deactive: false,\n            loadingState: true,\n          });\n          this._refreshControlTimer = setTimeout(() => {\n            if (!this.props.refreshing) {\n              scroller.finishPullToRefresh();\n            }\n            this._refreshControlTimer = undefined;\n          }, 1000);\n          onRefresh();\n        });\n      if (this.props.refreshing) {\n        scroller.triggerPullToRefresh();\n      }\n    }\n  }\n  render() {\n    const {\n      children, className, prefixCls, listPrefixCls, listViewPrefixCls,\n      style = {}, contentContainerStyle = {}, refreshControl,\n      icon, loading, refreshing,\n    } = this.props;\n\n    const preCls = prefixCls || listViewPrefixCls || '';\n\n    const containerProps = {\n      ref: el => this.ScrollViewRef = el,\n      style: { position: 'relative', overflow: 'hidden', flex: 1, ...style },\n      className: classNames(className, `${preCls}-scrollview`),\n    };\n    const contentContainerProps = {\n      ref: el => this.InnerScrollViewRef = el,\n      style: { position: 'absolute', minWidth: '100%', ...contentContainerStyle },\n      className: classNames(`${preCls}-scrollview-content`, listPrefixCls),\n    };\n\n    const { active, deactive, loadingState } = this.state;\n    const wrapCls = classNames(`${preCls}-refresh-control-indicator`, {\n      [`${preCls}-refresh-control-active`]: active,\n      [`${preCls}-refresh-control-deactive`]: deactive,\n      [`${preCls}-refresh-control-loading`]: loadingState || refreshing,\n    });\n\n    if (refreshControl) {\n      return (\n        <div {...containerProps}>\n          <div {...contentContainerProps}>\n            <div ref={el => this.RefreshControlRef = el} className={wrapCls}>\n              <div className={`${preCls}-refresh-control-indicator-icon-wrapper`}>{icon}</div>\n              <div className={`${preCls}-refresh-control-indicator-loading-wrapper`}>{loading}</div>\n            </div>\n            {children}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div {...containerProps}>\n        <div {...contentContainerProps}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Zscroller.js","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/performance-now/lib/performance-now.js\n// module id = 94\n// module chunks = 0 3","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raf/index.js\n// module id = 96\n// module chunks = 0 3"],"sourceRoot":""}