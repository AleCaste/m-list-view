{"version":3,"sources":["webpack:///./examples/base-rows.js"],"names":["NUM_ROWS","genData","pIndex","dataArr","i","push","Demo","props","dataSource","ListView","DataSource","rowHasChanged","row1","row2","state","document","body","style","overflowY","navigator","userAgent","match","setTimeout","lv","scrollTo","setState","cloneWithRows","el","height","border","margin","padding","rowData","React","Component","ReactDOM","render","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,WAAW,EAAjB;;AAEA,SAASC,OAAT,GAA6B;AAAA,MAAZC,MAAY,uEAAH,CAAG;;AAC3B,MAAMC,UAAU,EAAhB;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,QAApB,EAA8BI,GAA9B,EAAmC;AACjCD,YAAQE,IAAR,aAAuBH,SAASF,QAAV,GAAsBI,CAA5C;AACD;AACD,SAAOD,OAAP;AACD;;IAEKG,I;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,yKACXA,KADW;;AAEjB,QAAMC,aAAa,IAAI,qDAAAC,CAASC,UAAb,CAAwB;AACzCC,qBAAe,uBAACC,IAAD,EAAOC,IAAP;AAAA,eAAgBD,SAASC,IAAzB;AAAA;AAD0B,KAAxB,CAAnB;;AAIA,UAAKC,KAAL,GAAa;AACXN;AADW,KAAb;AANiB;AASlB;;;;wCAEmB;AAAA;;AAClBO,eAASC,IAAT,CAAcC,KAAd,CAAoBC,SAApB,GACEC,UAAUC,SAAV,CAAoBC,KAApB,CAA0B,2BAA1B,IAAyD,QAAzD,GAAoE,MADtE;AAEA;AACAC,iBAAW;AAAA,eAAM,OAAKC,EAAL,CAAQC,QAAR,CAAiB,CAAjB,EAAoB,EAApB,CAAN;AAAA,OAAX,EAA0C,GAA1C;;AAEA;AACAF,iBAAW,YAAM;AACf,eAAKG,QAAL,CAAc;AACZjB,sBAAY,OAAKM,KAAL,CAAWN,UAAX,CAAsBkB,aAAtB,CAAoCzB,SAApC;AADA,SAAd;AAGD,OAJD,EAIG,GAJH;AAKD;;;6BAEQ;AAAA;;AACP,aACE,4DAAC,qDAAD;AACE,aAAK;AAAA,iBAAM,OAAKsB,EAAL,GAAUI,EAAhB;AAAA,SADP;AAEE,oBAAY,KAAKb,KAAL,CAAWN,UAFzB;AAGE,eAAO,EAAEoB,QAAQ,GAAV,EAAeC,QAAQ,gBAAvB,EAAyCC,QAAQ,EAAjD,EAHT;AAIE,sBAAc;AAAA,iBACZ;AAAA;AAAA,cAAQ,SAAS;AAAA,uBAAM,OAAKP,EAAL,CAAQC,QAAR,CAAiB,CAAjB,EAAoB,GAApB,CAAN;AAAA,eAAjB;AAAA;AAAA,WADY;AAAA,SAJhB;AAME,mBAAW;AAAA,iBAAW;AAAA;AAAA,cAAK,OAAO,EAAEO,SAAS,EAAX,EAAZ;AAA8BC;AAA9B,WAAX;AAAA,SANb;AAOE,+BAAuB;AAPzB,QADF;AAWD;;;;EAtCgB,6CAAAC,CAAMC,S;;AAyCzB,iDAAAC,CAASC,MAAT,CAAgB,4DAAC,IAAD,OAAhB,EAA0BrB,SAASsB,cAAT,CAAwB,iBAAxB,CAA1B,E","file":"examples/base-rows.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint react/sort-comp: 0 */\nimport '../assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ListView from '../src';\n\nconst NUM_ROWS = 20;\n\nfunction genData(pIndex = 0) {\n  const dataArr = [];\n  for (let i = 0; i < NUM_ROWS; i++) {\n    dataArr.push(`row - ${(pIndex * NUM_ROWS) + i}`);\n  }\n  return dataArr;\n}\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2,\n    });\n\n    this.state = {\n      dataSource,\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.overflowY =\n      navigator.userAgent.match(/Android|iPhone|iPad|iPod/i) ? 'hidden' : 'auto';\n    // you can scroll to the specified position\n    setTimeout(() => this.lv.scrollTo(0, 50), 800);\n\n    // simulate initial Ajax\n    setTimeout(() => {\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(genData()),\n      });\n    }, 600);\n  }\n\n  render() {\n    return (\n      <ListView\n        ref={el => this.lv = el}\n        dataSource={this.state.dataSource}\n        style={{ height: 200, border: '1px solid #ccc', margin: 10 }}\n        renderHeader={() =>\n          <button onClick={() => this.lv.scrollTo(0, 100)}>scrollTo(0, 100)</button>}\n        renderRow={rowData => <div style={{ padding: 16 }}>{rowData}</div>}\n        onEndReachedThreshold={10}\n      />\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/base-rows.js"],"sourceRoot":""}